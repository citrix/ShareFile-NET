// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2018 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Net;

using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using ShareFile.Api.Client.Extensions;
using ShareFile.Api.Client.Exceptions;

namespace ShareFile.Api.Client.Models 
{
	/// <summary>
	/// Details about the cause of the failure for a given AccessControl of a bulk operation
	/// </summary>
	public class AccessControlFailedEntry : ODataObject 
	{
		/// <summary>
		/// Entity
		/// </summary>
		public AccessControl AccessControl { get; set; }
		/// <summary>
		/// Failure code
		/// </summary>
		public SafeEnum<HttpStatusCode> Code { get; set; }
		/// <summary>
		/// Exception message
		/// </summary>
		public ODataExceptionMessage Message { get; set; }

		public override void Copy(ODataObject source, JsonSerializer serializer)
		{
			if(source == null || serializer == null) return;
			base.Copy(source, serializer);

			var typedSource = source as AccessControlFailedEntry;
			if(typedSource != null)
			{
				AccessControl = typedSource.AccessControl;
				Code = typedSource.Code;
				Message = typedSource.Message;
			}
			else
			{
				JToken token;
				if(source.TryGetProperty("AccessControl", out token) && token.Type != JTokenType.Null)
				{
					AccessControl = (AccessControl)serializer.Deserialize(token.CreateReader(), typeof(AccessControl));
				}
				if(source.TryGetProperty("Code", out token) && token.Type != JTokenType.Null)
				{
					Code = (SafeEnum<HttpStatusCode>)serializer.Deserialize(token.CreateReader(), typeof(SafeEnum<HttpStatusCode>));
				}
				if(source.TryGetProperty("Message", out token) && token.Type != JTokenType.Null)
				{
					Message = (ODataExceptionMessage)serializer.Deserialize(token.CreateReader(), typeof(ODataExceptionMessage));
				}
			}
		}
	}
}