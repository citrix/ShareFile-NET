// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2018 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using ShareFile.Api.Client;
using ShareFile.Api.Client.Extensions;
using ShareFile.Api.Client.Models;
using ShareFile.Api.Client.Requests;


namespace ShareFile.Api.Client.Entities
{
    public interface IFavoritesEntity : IEntityBase
    {
        
        /// <summary>
        /// Get a list of all Favorite Items marked by the user
        /// </summary>
        /// <param name="userUrl"></param>
        /// <returns>
        /// A list of Favorite Items
        /// </returns>
        IQuery<ODataFeed<Favorite>> GetByUser(Uri userUrl);
        
        /// <summary>
        /// Get a single Favorite Item for a User with a given streamid of the Item
        /// </summary>
        /// <returns>
        /// A single Favorite Item
        /// </returns>
        IQuery<Favorite> GetByFavoriteItem(Uri url);
        
        /// <summary>
        /// Mark an Item as Favorite
        /// </summary>
        /// <example>
        /// {
        /// "Item": { "StreamID" : "itemStreamId" },
        /// "Alias" : "FileName",
        /// "DisplayPosition" : 1
        /// }
        /// </example>
        /// <remarks>
        /// Alias and DisplayPostion are not mandatory, the API assigns them if not provided
        /// </remarks>
        /// <param name="userUrl"></param>
        /// <param name="itemToMarkFavorite"></param>
        /// <returns>
        /// A single Favorite Item which was created with this request
        /// </returns>
        IQuery<Favorite> CreateByUser(Uri userUrl, Favorite itemToMarkFavorite);
        
        /// <summary>
        /// Replace the Favorite Items for a User with the given list of new Favorite Items
        /// </summary>
        /// <example>
        /// [
        /// {
        /// "Item": { "StreamID" : "item1StreamId" },
        /// "Alias" : "FileName1",
        /// "DisplayPosition" : 1
        /// },
        /// {
        /// "Item": { "StreamID" : "item2StreamId" },
        /// "Alias" : "FileName2",
        /// "DisplayPosition" : 2
        /// }
        /// ]
        /// </example>
        /// <remarks>
        /// The DisplayPosition and Alias for each Item should be unique
        /// </remarks>
        /// <param name="userUrl"></param>
        /// <param name="favoriteItems"></param>
        IQuery PatchByUser(Uri userUrl, IEnumerable<Favorite> favoriteItems);
        
        /// <summary>
        /// Remove the given Favorite Item for a User
        /// </summary>
        IQuery Delete(Uri url);
        
        /// <summary>
        /// Remove all Favorite Items for a User
        /// </summary>
        /// <param name="userUrl"></param>
        IQuery DeleteInBulkByUser(Uri userUrl);
    }

    public class FavoritesEntity : EntityBase, IFavoritesEntity
    {
        public FavoritesEntity (IShareFileClient client)
            : base (client, "Favorites")
        { }
        
        
        /// <summary>
        /// Get a list of all Favorite Items marked by the user
        /// </summary>
        /// <param name="userUrl"></param>
        /// <returns>
        /// A list of Favorite Items
        /// </returns>
        public IQuery<ODataFeed<Favorite>> GetByUser(Uri userUrl)
        {
            var sfApiQuery = new ShareFile.Api.Client.Requests.Query<ODataFeed<Favorite>>(Client);
            sfApiQuery.Action("Favorites");
            sfApiQuery.Uri(userUrl);
            sfApiQuery.HttpMethod = "GET";	
            return sfApiQuery;
        }
        
        /// <summary>
        /// Get a single Favorite Item for a User with a given streamid of the Item
        /// </summary>
        /// <returns>
        /// A single Favorite Item
        /// </returns>
        public IQuery<Favorite> GetByFavoriteItem(Uri url)
        {
            var sfApiQuery = new ShareFile.Api.Client.Requests.Query<Favorite>(Client);
            sfApiQuery.Uri(url);
            sfApiQuery.HttpMethod = "GET";	
            return sfApiQuery;
        }
        
        /// <summary>
        /// Mark an Item as Favorite
        /// </summary>
        /// <example>
        /// {
        /// "Item": { "StreamID" : "itemStreamId" },
        /// "Alias" : "FileName",
        /// "DisplayPosition" : 1
        /// }
        /// </example>
        /// <remarks>
        /// Alias and DisplayPostion are not mandatory, the API assigns them if not provided
        /// </remarks>
        /// <param name="userUrl"></param>
        /// <param name="itemToMarkFavorite"></param>
        /// <returns>
        /// A single Favorite Item which was created with this request
        /// </returns>
        public IQuery<Favorite> CreateByUser(Uri userUrl, Favorite itemToMarkFavorite)
        {
            var sfApiQuery = new ShareFile.Api.Client.Requests.Query<Favorite>(Client);
            sfApiQuery.Action("Favorites");
            sfApiQuery.Uri(userUrl);
            sfApiQuery.Body = itemToMarkFavorite;
            sfApiQuery.HttpMethod = "POST";	
            return sfApiQuery;
        }
        
        /// <summary>
        /// Replace the Favorite Items for a User with the given list of new Favorite Items
        /// </summary>
        /// <example>
        /// [
        /// {
        /// "Item": { "StreamID" : "item1StreamId" },
        /// "Alias" : "FileName1",
        /// "DisplayPosition" : 1
        /// },
        /// {
        /// "Item": { "StreamID" : "item2StreamId" },
        /// "Alias" : "FileName2",
        /// "DisplayPosition" : 2
        /// }
        /// ]
        /// </example>
        /// <remarks>
        /// The DisplayPosition and Alias for each Item should be unique
        /// </remarks>
        /// <param name="userUrl"></param>
        /// <param name="favoriteItems"></param>
        public IQuery PatchByUser(Uri userUrl, IEnumerable<Favorite> favoriteItems)
        {
            var sfApiQuery = new ShareFile.Api.Client.Requests.Query(Client);
            sfApiQuery.Action("Favorites");
            sfApiQuery.Uri(userUrl);
            sfApiQuery.Body = favoriteItems;
            sfApiQuery.HttpMethod = "PUT";	
            return sfApiQuery;
        }
        
        /// <summary>
        /// Remove the given Favorite Item for a User
        /// </summary>
        public IQuery Delete(Uri url)
        {
            var sfApiQuery = new ShareFile.Api.Client.Requests.Query(Client);
            sfApiQuery.Uri(url);
            sfApiQuery.HttpMethod = "DELETE";	
            return sfApiQuery;
        }
        
        /// <summary>
        /// Remove all Favorite Items for a User
        /// </summary>
        /// <param name="userUrl"></param>
        public IQuery DeleteInBulkByUser(Uri userUrl)
        {
            var sfApiQuery = new ShareFile.Api.Client.Requests.Query(Client);
            sfApiQuery.Action("Favorites");
            sfApiQuery.Uri(userUrl);
            sfApiQuery.HttpMethod = "DELETE";	
            return sfApiQuery;
        }
    }
}
