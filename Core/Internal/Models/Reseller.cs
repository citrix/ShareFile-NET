// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2015 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using ShareFile.Api.Client.Extensions;

namespace ShareFile.Api.Models 
{
#if ShareFile
	public class Reseller : ODataObject 
	{

		public string CompanyName { get; set; }

		public string CorporateOrganization { get; set; }

		public string CheckTo { get; set; }

		public string FirstName { get; set; }

		public string LastName { get; set; }

		public string Email { get; set; }

		public string Phone { get; set; }

		public string CompanyUrl { get; set; }

		public string Address1 { get; set; }

		public string Address2 { get; set; }

		public string City { get; set; }

		public string State { get; set; }

		public string Zip { get; set; }

		public string Country { get; set; }

		public string ResellerType { get; set; }

		public DateTime? CreationDate { get; set; }

		public string DemoAccountId { get; set; }

		public decimal? AccountBalance { get; set; }

		public bool? DefaultShowBillingInfo { get; set; }

		public string Note { get; set; }

		public string ResellerAccountType { get; set; }

		public override void Copy(ODataObject source, JsonSerializer serializer)
		{
			if(source == null || serializer == null) return;
			base.Copy(source, serializer);

			var typedSource = source as Reseller;
			if(typedSource != null)
			{
				CompanyName = typedSource.CompanyName;
				CorporateOrganization = typedSource.CorporateOrganization;
				CheckTo = typedSource.CheckTo;
				FirstName = typedSource.FirstName;
				LastName = typedSource.LastName;
				Email = typedSource.Email;
				Phone = typedSource.Phone;
				CompanyUrl = typedSource.CompanyUrl;
				Address1 = typedSource.Address1;
				Address2 = typedSource.Address2;
				City = typedSource.City;
				State = typedSource.State;
				Zip = typedSource.Zip;
				Country = typedSource.Country;
				ResellerType = typedSource.ResellerType;
				CreationDate = typedSource.CreationDate;
				DemoAccountId = typedSource.DemoAccountId;
				AccountBalance = typedSource.AccountBalance;
				DefaultShowBillingInfo = typedSource.DefaultShowBillingInfo;
				Note = typedSource.Note;
				ResellerAccountType = typedSource.ResellerAccountType;
			}
			else
			{
				JToken token;
				if(source.TryGetProperty("CompanyName", out token) && token.Type != JTokenType.Null)
				{
					CompanyName = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("CorporateOrganization", out token) && token.Type != JTokenType.Null)
				{
					CorporateOrganization = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("CheckTo", out token) && token.Type != JTokenType.Null)
				{
					CheckTo = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("FirstName", out token) && token.Type != JTokenType.Null)
				{
					FirstName = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("LastName", out token) && token.Type != JTokenType.Null)
				{
					LastName = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("Email", out token) && token.Type != JTokenType.Null)
				{
					Email = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("Phone", out token) && token.Type != JTokenType.Null)
				{
					Phone = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("CompanyUrl", out token) && token.Type != JTokenType.Null)
				{
					CompanyUrl = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("Address1", out token) && token.Type != JTokenType.Null)
				{
					Address1 = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("Address2", out token) && token.Type != JTokenType.Null)
				{
					Address2 = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("City", out token) && token.Type != JTokenType.Null)
				{
					City = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("State", out token) && token.Type != JTokenType.Null)
				{
					State = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("Zip", out token) && token.Type != JTokenType.Null)
				{
					Zip = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("Country", out token) && token.Type != JTokenType.Null)
				{
					Country = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("ResellerType", out token) && token.Type != JTokenType.Null)
				{
					ResellerType = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("CreationDate", out token) && token.Type != JTokenType.Null)
				{
					CreationDate = (DateTime?)serializer.Deserialize(token.CreateReader(), typeof(DateTime?));
				}
				if(source.TryGetProperty("DemoAccountId", out token) && token.Type != JTokenType.Null)
				{
					DemoAccountId = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("AccountBalance", out token) && token.Type != JTokenType.Null)
				{
					AccountBalance = (decimal?)serializer.Deserialize(token.CreateReader(), typeof(decimal?));
				}
				if(source.TryGetProperty("DefaultShowBillingInfo", out token) && token.Type != JTokenType.Null)
				{
					DefaultShowBillingInfo = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
				if(source.TryGetProperty("Note", out token) && token.Type != JTokenType.Null)
				{
					Note = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("ResellerAccountType", out token) && token.Type != JTokenType.Null)
				{
					ResellerAccountType = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
			}
		}
	}
#endif
}