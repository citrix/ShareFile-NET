// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2018 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Net;

using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using ShareFile.Api.Client.Extensions;
using ShareFile.Api.Client.Exceptions;

namespace ShareFile.Api.Client.Models 
{
	/// <summary>
	/// Contains account custom branding related links
	/// </summary>
	public class BrandingLinks : ODataObject 
	{
		/// <summary>
		/// Custom logo url
		/// </summary>
		public string LogoUrl { get; set; }
		/// <summary>
		/// Custom email logo url
		/// </summary>
		public string EmailLogoUrl { get; set; }
		/// <summary>
		/// Custom login logo url
		/// </summary>
		public string LoginLogoUrl { get; set; }
		/// <summary>
		/// Custom browser favorite icon url
		/// </summary>
		public string FavoriteIconUrl { get; set; }
		/// <summary>
		/// Custom background image URL
		/// </summary>
		public string BackgroundImageUrl { get; set; }
		/// <summary>
		/// Background image behind logo in masthead
		/// </summary>
		public string MastheadImageUrl { get; set; }
		/// <summary>
		/// Login page Background image
		/// </summary>
		public string LoginPageBackgroundImageUrl { get; set; }
		/// <summary>
		/// Custom Terms and Conditions
		/// </summary>
		public string TermsAndConditionsUrl { get; set; }

		public override void Copy(ODataObject source, JsonSerializer serializer)
		{
			if(source == null || serializer == null) return;
			base.Copy(source, serializer);

			var typedSource = source as BrandingLinks;
			if(typedSource != null)
			{
				LogoUrl = typedSource.LogoUrl;
				EmailLogoUrl = typedSource.EmailLogoUrl;
				LoginLogoUrl = typedSource.LoginLogoUrl;
				FavoriteIconUrl = typedSource.FavoriteIconUrl;
				BackgroundImageUrl = typedSource.BackgroundImageUrl;
				MastheadImageUrl = typedSource.MastheadImageUrl;
				LoginPageBackgroundImageUrl = typedSource.LoginPageBackgroundImageUrl;
				TermsAndConditionsUrl = typedSource.TermsAndConditionsUrl;
			}
			else
			{
				JToken token;
				if(source.TryGetProperty("LogoUrl", out token) && token.Type != JTokenType.Null)
				{
					LogoUrl = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("EmailLogoUrl", out token) && token.Type != JTokenType.Null)
				{
					EmailLogoUrl = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("LoginLogoUrl", out token) && token.Type != JTokenType.Null)
				{
					LoginLogoUrl = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("FavoriteIconUrl", out token) && token.Type != JTokenType.Null)
				{
					FavoriteIconUrl = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("BackgroundImageUrl", out token) && token.Type != JTokenType.Null)
				{
					BackgroundImageUrl = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("MastheadImageUrl", out token) && token.Type != JTokenType.Null)
				{
					MastheadImageUrl = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("LoginPageBackgroundImageUrl", out token) && token.Type != JTokenType.Null)
				{
					LoginPageBackgroundImageUrl = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("TermsAndConditionsUrl", out token) && token.Type != JTokenType.Null)
				{
					TermsAndConditionsUrl = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
			}
		}
	}
}