// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2014 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using ShareFile.Api.Models;
using ShareFile.Api.Client;

namespace ShareFile.Api.Client
{
#if ShareFile
	public class DevicesEntityInternal : DevicesEntity
	{
		/// <summary>
		/// Get Device Users for Current User
		/// </summary>
		/// <returns>
		/// A feed of DeviceUser objects
		/// </returns>
		public IQuery<ODataFeed<DeviceUser>> Get()
		{
			IQuery<ODataFeed<DeviceUser>> query = new IQuery<ODataFeed<DeviceUser>>(Client);
			query.From("Devices");
			query.HttpMethod = "GET";
			return query;
		}

		/// <summary>
		/// Get Device Users for Current User
		/// </summary>
		/// <returns>
		/// A feed of DeviceUser objects
		/// </returns>
		public IQuery<Device> Get(string id)
		{
			IQuery<Device> query = new IQuery<Device>(Client);
			query.From("Devices");
			query.Ids(id);
			query.HttpMethod = "GET";
			return query;
		}

		public IQuery<ODataFeed<DeviceUser>> GetByUser(string userId)
		{
			IQuery<ODataFeed<DeviceUser>> query = new IQuery<ODataFeed<DeviceUser>>(Client);
			query.From("User");
			query.Action("Devices");
			query.Ids(userId);
			query.HttpMethod = "GET";
			return query;
		}

		/// <summary>
		/// Delete Device
		/// </summary>
		/// <param name="id"></param>
		/// <returns>
		/// no data on success
		/// </returns>
		public IQuery Delete(string id)
		{
			IQuery query = new IQuery(Client);
			query.From("Devices");
			query.Ids(id);
			query.HttpMethod = "DELETE";
			return query;
		}

		public IQuery DeleteByUser(string userId, string deviceId)
		{
			IQuery query = new IQuery(Client);
			query.From("User");
			query.Action("Devices");
			query.Ids(userId);
			query.ActionIds(deviceId);
			query.HttpMethod = "DELETE";
			return query;
		}

		public IQuery<DeviceUser> CreateByUser(string userId, string deviceId, DeviceUser du)
		{
			IQuery<DeviceUser> query = new IQuery<DeviceUser>(Client);
			query.From("User");
			query.Action("Devices");
			query.Ids(userId);
			query.ActionIds(deviceId);
			query.Body = du;
			query.HttpMethod = "POST";
			return query;
		}

		/// <summary>
		/// Wipe Device
		/// </summary>
		/// <param name="deviceID"></param>
		/// <param name="userid"></param>
		/// <returns>
		/// no data on success
		/// </returns>
		public IQuery Wipe(string deviceID, string userid = null)
		{
			IQuery query = new IQuery(Client);
			query.From("Devices");
			query.Action("Wipe");
			query.Ids(deviceID);
			query.QueryString("userid", userid);
			query.HttpMethod = "POST";
			return query;
		}

		/// <summary>
		/// Signal Wipe Done
		/// </summary>
		/// <example>
		/// {
		/// "Logs" :
		/// [
		/// { "FileName":"fileA",
		/// "FileID":"id",
		/// "Timestamp":0,
		/// "AccountID":"id",
		/// "UserID":"userId1",
		/// "Action":"OpenGeneric",
		/// "AdditionalInfo":""
		/// },
		/// ...
		/// ],
		/// "WipeResults" :
		/// [
		/// {"id":"userId1", "WipeToken":"token1", "Success":"true", "ErrorMessage":"" },
		/// {"id":"userId1", "WipeToken":"token2", "Success":"false", "ErrorMessage":"some error" },
		/// ...
		/// ]
		/// }
		/// </example>
		/// <remarks>
		/// Signal that a device wipe has been completed
		/// </remarks>
		/// <param name="deviceID"></param>
		/// <param name="deviceWipeReport"></param>
		/// <param name="singlePlane"></param>
		/// <returns>
		/// no data on success
		/// </returns>
		public IQuery WipeDone(string deviceID, DeviceWipeReport deviceWipeReport, bool singlePlane = false)
		{
			IQuery query = new IQuery(Client);
			query.From("Devices");
			query.Action("WipeDone");
			query.Ids(deviceID);
			query.QueryString("singlePlane", singlePlane);
			query.Body = deviceWipeReport;
			query.HttpMethod = "POST";
			return query;
		}

		/// <summary>
		/// Check Device Status
		/// </summary>
		/// <param name="deviceID"></param>
		/// <returns>
		/// DeviceStatus
		/// </returns>
		public IQuery<DeviceStatus> Status(string deviceID)
		{
			IQuery<DeviceStatus> query = new IQuery<DeviceStatus>(Client);
			query.From("Devices");
			query.Action("Status");
			query.Ids(deviceID);
			query.HttpMethod = "GET";
			return query;
		}

	}
#endif
}
