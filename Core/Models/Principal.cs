// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2014 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using ShareFile.Api.Client.Extensions;

namespace ShareFile.Api.Models 
{
	public class Principal : ODataObject 
	{

		/// <summary>
		/// User name
		/// </summary>
		public string Name { get; set; }

		/// <summary>
		/// Email address
		/// </summary>
		public string Email { get; set; }

		/// <summary>
		/// Username for the account - the value used for login. This is the same as Email for ShareFile accounts, but
		/// may be different on Connectors
		/// </summary>
		public string Username { get; set; }

		/// <summary>
		/// Account domain
		/// </summary>
		public string Domain { get; set; }

		public override void Copy(ODataObject source, JsonSerializer serializer)
		{
			if(source == null || serializer == null) return;
			base.Copy(source, serializer);

			var typedSource = source as Principal;
			if(typedSource != null)
			{
				Name = typedSource.Name;
				Email = typedSource.Email;
				Username = typedSource.Username;
				Domain = typedSource.Domain;
			}
			else
			{
				JToken token;
				if(source.TryGetProperty("Name", out token) && token.Type != JTokenType.Null)
				{
					Name = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("Email", out token) && token.Type != JTokenType.Null)
				{
					Email = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("Username", out token) && token.Type != JTokenType.Null)
				{
					Username = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("Domain", out token) && token.Type != JTokenType.Null)
				{
					Domain = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
			}
		}
	}
}