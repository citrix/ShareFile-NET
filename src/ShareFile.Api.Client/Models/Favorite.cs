// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2018 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Net;

using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using ShareFile.Api.Client.Extensions;
using ShareFile.Api.Client.Exceptions;

namespace ShareFile.Api.Client.Models 
{
	/// <summary>
	/// Class representing an item which has been marked as Favorite
	/// </summary>
	public class Favorite : ODataObject 
	{
		/// <summary>
		/// Creator of the Favorite
		/// </summary>
		public User User { get; set; }
		/// <summary>
		/// The item which is marked as Favorite
		/// </summary>
		public Item Item { get; set; }
		/// <summary>
		/// The position within the set of Favorite items where this Favorite should be displayed
		/// </summary>
		public int? DisplayPosition { get; set; }
		/// <summary>
		/// The alias name of the Favorite
		/// </summary>
		public string Alias { get; set; }
		/// <summary>
		/// Date when the item was marked favorite
		/// </summary>
		public DateTime? CreationDate { get; set; }

		public override void Copy(ODataObject source, JsonSerializer serializer)
		{
			if(source == null || serializer == null) return;
			base.Copy(source, serializer);

			var typedSource = source as Favorite;
			if(typedSource != null)
			{
				User = typedSource.User;
				Item = typedSource.Item;
				DisplayPosition = typedSource.DisplayPosition;
				Alias = typedSource.Alias;
				CreationDate = typedSource.CreationDate;
			}
			else
			{
				JToken token;
				if(source.TryGetProperty("User", out token) && token.Type != JTokenType.Null)
				{
					User = (User)serializer.Deserialize(token.CreateReader(), typeof(User));
				}
				if(source.TryGetProperty("Item", out token) && token.Type != JTokenType.Null)
				{
					Item = (Item)serializer.Deserialize(token.CreateReader(), typeof(Item));
				}
				if(source.TryGetProperty("DisplayPosition", out token) && token.Type != JTokenType.Null)
				{
					DisplayPosition = (int?)serializer.Deserialize(token.CreateReader(), typeof(int?));
				}
				if(source.TryGetProperty("Alias", out token) && token.Type != JTokenType.Null)
				{
					Alias = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("CreationDate", out token) && token.Type != JTokenType.Null)
				{
					CreationDate = (DateTime?)serializer.Deserialize(token.CreateReader(), typeof(DateTime?));
				}
			}
		}
	}
}