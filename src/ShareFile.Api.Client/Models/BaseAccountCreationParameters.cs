// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2018 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Net;

using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using ShareFile.Api.Client.Extensions;
using ShareFile.Api.Client.Exceptions;

namespace ShareFile.Api.Client.Models 
{
	/// <summary>
	/// Abstract class reprensenting the base parameters required to create an account
	/// </summary>
	public class BaseAccountCreationParameters : ODataObject 
	{
		/// <summary>
		/// Billing Contact for this account, which will be the first user provisioned
		/// </summary>
		public BillingContact BillingContact { get; set; }
		/// <summary>
		/// Company Contact Information
		/// </summary>
		public CompanyContactInformation ContactInformation { get; set; }
		/// <summary>
		/// Whether the account should be a Free Trial
		/// </summary>
		public bool? IsFreeTrial { get; set; }
		/// <summary>
		/// Usage Plan to be provisioned for this account
		/// </summary>
		public RequestedPlan RequestedPlan { get; set; }
		/// <summary>
		/// Optional Subdomain to set to the account
		/// </summary>
		public string Subdomain { get; set; }
		/// <summary>
		/// Plan Name
		/// </summary>
		public string PlanName { get; set; }

		public override void Copy(ODataObject source, JsonSerializer serializer)
		{
			if(source == null || serializer == null) return;
			base.Copy(source, serializer);

			var typedSource = source as BaseAccountCreationParameters;
			if(typedSource != null)
			{
				BillingContact = typedSource.BillingContact;
				ContactInformation = typedSource.ContactInformation;
				IsFreeTrial = typedSource.IsFreeTrial;
				RequestedPlan = typedSource.RequestedPlan;
				Subdomain = typedSource.Subdomain;
				PlanName = typedSource.PlanName;
			}
			else
			{
				JToken token;
				if(source.TryGetProperty("BillingContact", out token) && token.Type != JTokenType.Null)
				{
					BillingContact = (BillingContact)serializer.Deserialize(token.CreateReader(), typeof(BillingContact));
				}
				if(source.TryGetProperty("ContactInformation", out token) && token.Type != JTokenType.Null)
				{
					ContactInformation = (CompanyContactInformation)serializer.Deserialize(token.CreateReader(), typeof(CompanyContactInformation));
				}
				if(source.TryGetProperty("IsFreeTrial", out token) && token.Type != JTokenType.Null)
				{
					IsFreeTrial = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
				if(source.TryGetProperty("RequestedPlan", out token) && token.Type != JTokenType.Null)
				{
					RequestedPlan = (RequestedPlan)serializer.Deserialize(token.CreateReader(), typeof(RequestedPlan));
				}
				if(source.TryGetProperty("Subdomain", out token) && token.Type != JTokenType.Null)
				{
					Subdomain = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("PlanName", out token) && token.Type != JTokenType.Null)
				{
					PlanName = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
			}
		}
	}
}