// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2018 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Net;

using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using ShareFile.Api.Client.Extensions;
using ShareFile.Api.Client.Exceptions;

namespace ShareFile.Api.Client.Models 
{
	public class Support : ODataObject 
	{
		public IEnumerable<EmailSupport> EmailAddresses { get; set; }
		public IEnumerable<PhoneSupport> PhoneNumbers { get; set; }
		public string KBUrl { get; set; }
		public string KBSearchUrl { get; set; }
		public bool? ShowLiveChat { get; set; }
		public bool? ShowAccountManager { get; set; }
		public string TicketTarget { get; set; }
		public bool? IsCustom { get; set; }
		public bool? ShowFeedback { get; set; }

		public override void Copy(ODataObject source, JsonSerializer serializer)
		{
			if(source == null || serializer == null) return;
			base.Copy(source, serializer);

			var typedSource = source as Support;
			if(typedSource != null)
			{
				EmailAddresses = typedSource.EmailAddresses;
				PhoneNumbers = typedSource.PhoneNumbers;
				KBUrl = typedSource.KBUrl;
				KBSearchUrl = typedSource.KBSearchUrl;
				ShowLiveChat = typedSource.ShowLiveChat;
				ShowAccountManager = typedSource.ShowAccountManager;
				TicketTarget = typedSource.TicketTarget;
				IsCustom = typedSource.IsCustom;
				ShowFeedback = typedSource.ShowFeedback;
			}
			else
			{
				JToken token;
				if(source.TryGetProperty("EmailAddresses", out token) && token.Type != JTokenType.Null)
				{
					EmailAddresses = (IEnumerable<EmailSupport>)serializer.Deserialize(token.CreateReader(), typeof(IEnumerable<EmailSupport>));
				}
				if(source.TryGetProperty("PhoneNumbers", out token) && token.Type != JTokenType.Null)
				{
					PhoneNumbers = (IEnumerable<PhoneSupport>)serializer.Deserialize(token.CreateReader(), typeof(IEnumerable<PhoneSupport>));
				}
				if(source.TryGetProperty("KBUrl", out token) && token.Type != JTokenType.Null)
				{
					KBUrl = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("KBSearchUrl", out token) && token.Type != JTokenType.Null)
				{
					KBSearchUrl = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("ShowLiveChat", out token) && token.Type != JTokenType.Null)
				{
					ShowLiveChat = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
				if(source.TryGetProperty("ShowAccountManager", out token) && token.Type != JTokenType.Null)
				{
					ShowAccountManager = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
				if(source.TryGetProperty("TicketTarget", out token) && token.Type != JTokenType.Null)
				{
					TicketTarget = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("IsCustom", out token) && token.Type != JTokenType.Null)
				{
					IsCustom = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
				if(source.TryGetProperty("ShowFeedback", out token) && token.Type != JTokenType.Null)
				{
					ShowFeedback = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
			}
		}
	}
}