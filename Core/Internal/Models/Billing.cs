// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2014 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using ShareFile.Api.Client.Extensions;

namespace ShareFile.Api.Models 
{
#if ShareFile
	public class Billing : ODataObject 
	{

		public decimal? TotalBillingAmount { get; set; }

		public decimal? GrossBillingAmount { get; set; }

		public string BillingCycle { get; set; }

		public string AccountID { get; set; }

		public override void Copy(ODataObject source, JsonSerializer serializer)
		{
			if(source == null || serializer == null) return;
			base.Copy(source, serializer);

			var typedSource = source as Billing;
			if(typedSource != null)
			{
				TotalBillingAmount = typedSource.TotalBillingAmount;
				GrossBillingAmount = typedSource.GrossBillingAmount;
				BillingCycle = typedSource.BillingCycle;
				AccountID = typedSource.AccountID;
			}
			else
			{
				JToken token;
				if(source.TryGetProperty("TotalBillingAmount", out token) && token.Type != JTokenType.Null)
				{
					TotalBillingAmount = (decimal?)serializer.Deserialize(token.CreateReader(), typeof(decimal?));
				}
				if(source.TryGetProperty("GrossBillingAmount", out token) && token.Type != JTokenType.Null)
				{
					GrossBillingAmount = (decimal?)serializer.Deserialize(token.CreateReader(), typeof(decimal?));
				}
				if(source.TryGetProperty("BillingCycle", out token) && token.Type != JTokenType.Null)
				{
					BillingCycle = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("AccountID", out token) && token.Type != JTokenType.Null)
				{
					AccountID = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
			}
		}
	}
#endif
}