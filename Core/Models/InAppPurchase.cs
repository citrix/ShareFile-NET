// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2014 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using ShareFile.Api.Client.Extensions;

namespace ShareFile.Api.Models 
{
	public class InAppPurchase : ODataObject 
	{

		public string ProductID { get; set; }

		public string AppStore { get; set; }

		public string SharedSecret { get; set; }

		public string ReceiptData { get; set; }

		public decimal UnitPrice { get; set; }

		public string Currency { get; set; }

		public override void Copy(ODataObject source, JsonSerializer serializer)
		{
			if(source == null || serializer == null) return;
			base.Copy(source, serializer);

			var typedSource = source as InAppPurchase;
			if(typedSource != null)
			{
				ProductID = typedSource.ProductID;
				AppStore = typedSource.AppStore;
				SharedSecret = typedSource.SharedSecret;
				ReceiptData = typedSource.ReceiptData;
				UnitPrice = typedSource.UnitPrice;
				Currency = typedSource.Currency;
			}
			else
			{
				JToken token;
				if(source.TryGetProperty("ProductID", out token) && token.Type != JTokenType.Null)
				{
					ProductID = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("AppStore", out token) && token.Type != JTokenType.Null)
				{
					AppStore = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("SharedSecret", out token) && token.Type != JTokenType.Null)
				{
					SharedSecret = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("ReceiptData", out token) && token.Type != JTokenType.Null)
				{
					ReceiptData = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("UnitPrice", out token) && token.Type != JTokenType.Null)
				{
					UnitPrice = (decimal)serializer.Deserialize(token.CreateReader(), typeof(decimal));
				}
				if(source.TryGetProperty("Currency", out token) && token.Type != JTokenType.Null)
				{
					Currency = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
			}
		}
	}
}