// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2015 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.IO;
using ShareFile.Api.Models;
using ShareFile.Api.Client;
using ShareFile.Api.Client.Requests;
using ShareFile.Api.Client.Extensions;

namespace ShareFile.Api.Client.Entities.Extensions
{
    public static class UsersEntityInternalExtensions
    {
        
        /// <summary>
        /// This method adds a list of account users to the account
        /// </summary>
        /// <example>
        /// [
        /// {"FirstName": "FirstName1", "LastName": "LastName1", "Email": "FirstName1.LastName1@TestCompany.com", "IsAdministrator": true},
        /// {"FirstName": "FirstName2", "LastName": "LastName2", "Email": "FirstName2.LastName2@TestCompany.com"},
        /// {"FirstName": "FirstName3", "LastName": "LastName3", "Email": "FirstName3.LastName3@TestCompany.com", "IsAdministrator": true},
        /// {"FirstName": "FirstName4", "LastName": "LastName4", "Email": "FirstName4.LastName4@TestCompany.com"},
        /// {"FirstName": "FirstName5", "LastName": "LastName5", "Email": "FirstName5.LastName5@TestCompany.com", "IsAdministrator": true}
        /// ]
        /// </example>
        /// <param name="accountUsers"></param>
        /// <param name="accountId"></param>
        /// <returns>
        /// The list of users that are added to the account
        /// </returns>
        public static IQuery<ODataFeed<AccountUser>> CreateAccountUsers(this IUsersEntity entity, IEnumerable<AccountUser> accountUsers, string accountId)
        {
            var sfApiQuery = new ShareFile.Api.Client.Requests.Query<ODataFeed<AccountUser>>(entity.Client);
		    sfApiQuery.From("Users");
		    sfApiQuery.Action("AccountUsers");
            sfApiQuery.QueryString("accountId", accountId);
            sfApiQuery.Body = accountUsers;
            sfApiQuery.HttpMethod = "POST";	
		    return sfApiQuery;
        }
    }
}