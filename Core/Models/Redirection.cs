// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2015 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Net;

using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using ShareFile.Api.Client.Extensions;
using ShareFile.Api.Client.Exceptions;

namespace ShareFile.Api.Models 
{
	public class Redirection : ODataObject 
	{

		public string Method { get; set; }

		public string Root { get; set; }

		public Zone Zone { get; set; }

		public object Domain { get; set; }

		public Uri Uri { get; set; }

		public Uri FormsUri { get; set; }

		public Uri SessionUri { get; set; }

		public Uri TokenUri { get; set; }

		public bool SessionCheck { get; set; }

		public string Body { get; set; }

		public bool Available { get; set; }

		public override void Copy(ODataObject source, JsonSerializer serializer)
		{
			if(source == null || serializer == null) return;
			base.Copy(source, serializer);

			var typedSource = source as Redirection;
			if(typedSource != null)
			{
				Method = typedSource.Method;
				Root = typedSource.Root;
				Zone = typedSource.Zone;
				Domain = typedSource.Domain;
				Uri = typedSource.Uri;
				FormsUri = typedSource.FormsUri;
				SessionUri = typedSource.SessionUri;
				TokenUri = typedSource.TokenUri;
				SessionCheck = typedSource.SessionCheck;
				Body = typedSource.Body;
				Available = typedSource.Available;
			}
			else
			{
				JToken token;
				if(source.TryGetProperty("Method", out token) && token.Type != JTokenType.Null)
				{
					Method = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("Root", out token) && token.Type != JTokenType.Null)
				{
					Root = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("Zone", out token) && token.Type != JTokenType.Null)
				{
					Zone = (Zone)serializer.Deserialize(token.CreateReader(), typeof(Zone));
				}
				if(source.TryGetProperty("Domain", out token) && token.Type != JTokenType.Null)
				{
					Domain = (object)serializer.Deserialize(token.CreateReader(), typeof(object));
				}
				if(source.TryGetProperty("Uri", out token) && token.Type != JTokenType.Null)
				{
					Uri = (Uri)serializer.Deserialize(token.CreateReader(), typeof(Uri));
				}
				if(source.TryGetProperty("FormsUri", out token) && token.Type != JTokenType.Null)
				{
					FormsUri = (Uri)serializer.Deserialize(token.CreateReader(), typeof(Uri));
				}
				if(source.TryGetProperty("SessionUri", out token) && token.Type != JTokenType.Null)
				{
					SessionUri = (Uri)serializer.Deserialize(token.CreateReader(), typeof(Uri));
				}
				if(source.TryGetProperty("TokenUri", out token) && token.Type != JTokenType.Null)
				{
					TokenUri = (Uri)serializer.Deserialize(token.CreateReader(), typeof(Uri));
				}
				if(source.TryGetProperty("SessionCheck", out token) && token.Type != JTokenType.Null)
				{
					SessionCheck = (bool)serializer.Deserialize(token.CreateReader(), typeof(bool));
				}
				if(source.TryGetProperty("Body", out token) && token.Type != JTokenType.Null)
				{
					Body = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("Available", out token) && token.Type != JTokenType.Null)
				{
					Available = (bool)serializer.Deserialize(token.CreateReader(), typeof(bool));
				}
			}
		}
	}
}