// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2018 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Net;

using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using ShareFile.Api.Client.Extensions;
using ShareFile.Api.Client.Exceptions;

namespace ShareFile.Api.Client.Models 
{
	/// <summary>
	/// Result of a bulk operation on AccessControls
	/// </summary>
	public class AccessControlBulkResult : ODataObject 
	{
		/// <summary>
		/// A list of entities processed successfully
		/// </summary>
		public IEnumerable<AccessControl> SuccessEntities { get; set; }
		/// <summary>
		/// A list of AsyncOperations created for processing the bulk operation
		/// </summary>
		public IEnumerable<AsyncOperation> AsyncOperations { get; set; }
		/// <summary>
		/// A list of entities for which the operation failed
		/// </summary>
		public IEnumerable<AccessControlFailedEntry> FailedEntities { get; set; }

		public override void Copy(ODataObject source, JsonSerializer serializer)
		{
			if(source == null || serializer == null) return;
			base.Copy(source, serializer);

			var typedSource = source as AccessControlBulkResult;
			if(typedSource != null)
			{
				SuccessEntities = typedSource.SuccessEntities;
				AsyncOperations = typedSource.AsyncOperations;
				FailedEntities = typedSource.FailedEntities;
			}
			else
			{
				JToken token;
				if(source.TryGetProperty("SuccessEntities", out token) && token.Type != JTokenType.Null)
				{
					SuccessEntities = (IEnumerable<AccessControl>)serializer.Deserialize(token.CreateReader(), typeof(IEnumerable<AccessControl>));
				}
				if(source.TryGetProperty("AsyncOperations", out token) && token.Type != JTokenType.Null)
				{
					AsyncOperations = (IEnumerable<AsyncOperation>)serializer.Deserialize(token.CreateReader(), typeof(IEnumerable<AsyncOperation>));
				}
				if(source.TryGetProperty("FailedEntities", out token) && token.Type != JTokenType.Null)
				{
					FailedEntities = (IEnumerable<AccessControlFailedEntry>)serializer.Deserialize(token.CreateReader(), typeof(IEnumerable<AccessControlFailedEntry>));
				}
			}
		}
	}
}