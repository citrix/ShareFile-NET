// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2015 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.IO;
using ShareFile.Api.Models;
using ShareFile.Api.Client;
using ShareFile.Api.Client.Requests;
using ShareFile.Api.Client.Extensions;

namespace ShareFile.Api.Client.Entities
{
    public interface IBillingEntityInternal : IEntityBase
    {
        
        /// <summary>
        /// Get Billing
        /// </summary>
        /// <returns>
        /// Billing
        /// </returns>
        IQuery<Billing> Get();
        
        /// <summary>
        /// Create new discounts
        /// </summary>
        /// <example>
        /// [
        /// {
        /// "DiscountType": "Percent",
        /// "DiscountAmount": "30",
        /// "DiscountDescription": "DiscountTest",
        /// "DiscountCode": "Rest of month",
        /// "CreationDate": "10/14/2014",
        /// "ExpirationDate": "10/31/2014",
        /// "PromoCode": "Rest of Month"
        /// },
        /// {
        /// "DiscountType": "Percent",
        /// "DiscountAmount": "25",
        /// "DiscountDescription": "DiscountTest",
        /// "DiscountCode": "Quarterly",
        /// "CreationDate": "11/01/2014",
        /// "ExpirationDate": "01/31/2015",
        /// "PromoCode": "Quarterly"
        /// },
        /// {
        /// "DiscountType": "Percent",
        /// "DiscountAmount": "20",
        /// "DiscountDescription": "DiscountTest",
        /// "DiscountCode": "Quarterly",
        /// "CreationDate": "11/01/2014",
        /// "ExpirationDate": "01/31/2015",
        /// "PromoCode": "Quarterly"
        /// },
        /// {
        /// "DiscountType": "Percent",
        /// "DiscountAmount": "15",
        /// "DiscountDescription": "DiscountTest",
        /// "DiscountCode": "Monthly",
        /// "CreationDate": "11/01/2014",
        /// "ExpirationDate": "11/30/2014",
        /// "PromoCode": "Monthly"
        /// },
        /// {
        /// "DiscountType": "Percent",
        /// "DiscountAmount": "45",
        /// "DiscountDescription": "DiscountTest",
        /// "DiscountDescription": "DiscountTest",
        /// "DiscountCode": "Monthly",
        /// "CreationDate": "11/01/2014",
        /// "ExpirationDate": "11/30/2014",
        /// "PromoCode": "Monthly"
        /// },
        /// {
        /// "DiscountType": "Percent",
        /// "DiscountAmount": "10",
        /// "DiscountDescription": "DiscountTest",
        /// "DiscountCode": "Yearly",
        /// "CreationDate": "11/01/2014",
        /// "ExpirationDate": "10/31/2015",
        /// "PromoCode": "Yearly"
        /// }
        /// ]
        /// </example>
        /// <param name="discounts"></param>
        /// <param name="accountId"></param>
        /// <returns>
        /// List of discounts that are added to the account
        /// </returns>
        IQuery<ODataFeed<CustomBillingEntry>> CreateCustomBillingEntry(IEnumerable<CustomBillingEntry> discounts, string accountId);
    }

    public class BillingEntityInternal : EntityBase, IBillingEntityInternal
    {
        public BillingEntityInternal (IShareFileClient client)
            : base (client, "Billing")
        { }
        
        
        /// <summary>
        /// Get Billing
        /// </summary>
        /// <returns>
        /// Billing
        /// </returns>
        public IQuery<Billing> Get()
        {
            var sfApiQuery = new ShareFile.Api.Client.Requests.Query<Billing>(Client);
		    sfApiQuery.From("Billing");
            sfApiQuery.HttpMethod = "GET";	
		    return sfApiQuery;
        }
        
        /// <summary>
        /// Create new discounts
        /// </summary>
        /// <example>
        /// [
        /// {
        /// "DiscountType": "Percent",
        /// "DiscountAmount": "30",
        /// "DiscountDescription": "DiscountTest",
        /// "DiscountCode": "Rest of month",
        /// "CreationDate": "10/14/2014",
        /// "ExpirationDate": "10/31/2014",
        /// "PromoCode": "Rest of Month"
        /// },
        /// {
        /// "DiscountType": "Percent",
        /// "DiscountAmount": "25",
        /// "DiscountDescription": "DiscountTest",
        /// "DiscountCode": "Quarterly",
        /// "CreationDate": "11/01/2014",
        /// "ExpirationDate": "01/31/2015",
        /// "PromoCode": "Quarterly"
        /// },
        /// {
        /// "DiscountType": "Percent",
        /// "DiscountAmount": "20",
        /// "DiscountDescription": "DiscountTest",
        /// "DiscountCode": "Quarterly",
        /// "CreationDate": "11/01/2014",
        /// "ExpirationDate": "01/31/2015",
        /// "PromoCode": "Quarterly"
        /// },
        /// {
        /// "DiscountType": "Percent",
        /// "DiscountAmount": "15",
        /// "DiscountDescription": "DiscountTest",
        /// "DiscountCode": "Monthly",
        /// "CreationDate": "11/01/2014",
        /// "ExpirationDate": "11/30/2014",
        /// "PromoCode": "Monthly"
        /// },
        /// {
        /// "DiscountType": "Percent",
        /// "DiscountAmount": "45",
        /// "DiscountDescription": "DiscountTest",
        /// "DiscountDescription": "DiscountTest",
        /// "DiscountCode": "Monthly",
        /// "CreationDate": "11/01/2014",
        /// "ExpirationDate": "11/30/2014",
        /// "PromoCode": "Monthly"
        /// },
        /// {
        /// "DiscountType": "Percent",
        /// "DiscountAmount": "10",
        /// "DiscountDescription": "DiscountTest",
        /// "DiscountCode": "Yearly",
        /// "CreationDate": "11/01/2014",
        /// "ExpirationDate": "10/31/2015",
        /// "PromoCode": "Yearly"
        /// }
        /// ]
        /// </example>
        /// <param name="discounts"></param>
        /// <param name="accountId"></param>
        /// <returns>
        /// List of discounts that are added to the account
        /// </returns>
        public IQuery<ODataFeed<CustomBillingEntry>> CreateCustomBillingEntry(IEnumerable<CustomBillingEntry> discounts, string accountId)
        {
            var sfApiQuery = new ShareFile.Api.Client.Requests.Query<ODataFeed<CustomBillingEntry>>(Client);
		    sfApiQuery.From("Billing");
		    sfApiQuery.Action("CustomBillingEntry");
            sfApiQuery.QueryString("accountId", accountId);
            sfApiQuery.Body = discounts;
            sfApiQuery.HttpMethod = "POST";	
		    return sfApiQuery;
        }
    }
}