// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2015 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Net;

using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using ShareFile.Api.Client.Extensions;
using ShareFile.Api.Client.Exceptions;

namespace ShareFile.Api.Models 
{
	public class ShareItemHistory : ODataObject 
	{

		public string Title { get; set; }

		public string Recipient { get; set; }

		public SafeEnum<ItemAction> ActivityType { get; set; }

		public DateTime? DownloadDate { get; set; }

		public override void Copy(ODataObject source, JsonSerializer serializer)
		{
			if(source == null || serializer == null) return;
			base.Copy(source, serializer);

			var typedSource = source as ShareItemHistory;
			if(typedSource != null)
			{
				Title = typedSource.Title;
				Recipient = typedSource.Recipient;
				ActivityType = typedSource.ActivityType;
				DownloadDate = typedSource.DownloadDate;
			}
			else
			{
				JToken token;
				if(source.TryGetProperty("Title", out token) && token.Type != JTokenType.Null)
				{
					Title = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("Recipient", out token) && token.Type != JTokenType.Null)
				{
					Recipient = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("ActivityType", out token) && token.Type != JTokenType.Null)
				{
					ActivityType = (SafeEnum<ItemAction>)serializer.Deserialize(token.CreateReader(), typeof(SafeEnum<ItemAction>));
				}
				if(source.TryGetProperty("DownloadDate", out token) && token.Type != JTokenType.Null)
				{
					DownloadDate = (DateTime?)serializer.Deserialize(token.CreateReader(), typeof(DateTime?));
				}
			}
		}
	}
}