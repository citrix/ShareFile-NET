// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2018 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Net;

using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using ShareFile.Api.Client.Extensions;
using ShareFile.Api.Client.Exceptions;

namespace ShareFile.Api.Client.Models 
{
	public class UserSummaryReportFilter : ReportFilter 
	{
		/// <summary>
		/// Include Employee Users in the output
		/// </summary>
		public bool? IncludeEmployees { get; set; }
		/// <summary>
		/// Include Client Users in the output
		/// </summary>
		public bool? IncludeClients { get; set; }
		/// <summary>
		/// Include Users that have logged in at least once
		/// </summary>
		public bool? IncludeUsersThatHaveLoggedIn { get; set; }
		/// <summary>
		/// Include Users that have not logged in
		/// </summary>
		public bool? IncludeUsersThatHaveNotLoggedIn { get; set; }
		/// <summary>
		/// Include Users that are disabled (Enabled Users are always included)
		/// </summary>
		public bool? IncludeDisabledUsers { get; set; }
		/// <summary>
		/// Include Users that are in the Shared Address Book
		/// </summary>
		public bool? IncludeSharedAddressBookUsers { get; set; }
		/// <summary>
		/// Include Users that have a Quota assigned to them (Users with no Quota are always included)
		/// </summary>
		public bool? IncludeUsersWithAssignedQuota { get; set; }
		/// <summary>
		/// Include Users that have at least one Policy assigned to them (Users with no Policies are always included)
		/// </summary>
		public bool? IncludeUsersWithAssignedPolicies { get; set; }

		public override void Copy(ODataObject source, JsonSerializer serializer)
		{
			if(source == null || serializer == null) return;
			base.Copy(source, serializer);

			var typedSource = source as UserSummaryReportFilter;
			if(typedSource != null)
			{
				IncludeEmployees = typedSource.IncludeEmployees;
				IncludeClients = typedSource.IncludeClients;
				IncludeUsersThatHaveLoggedIn = typedSource.IncludeUsersThatHaveLoggedIn;
				IncludeUsersThatHaveNotLoggedIn = typedSource.IncludeUsersThatHaveNotLoggedIn;
				IncludeDisabledUsers = typedSource.IncludeDisabledUsers;
				IncludeSharedAddressBookUsers = typedSource.IncludeSharedAddressBookUsers;
				IncludeUsersWithAssignedQuota = typedSource.IncludeUsersWithAssignedQuota;
				IncludeUsersWithAssignedPolicies = typedSource.IncludeUsersWithAssignedPolicies;
			}
			else
			{
				JToken token;
				if(source.TryGetProperty("IncludeEmployees", out token) && token.Type != JTokenType.Null)
				{
					IncludeEmployees = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
				if(source.TryGetProperty("IncludeClients", out token) && token.Type != JTokenType.Null)
				{
					IncludeClients = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
				if(source.TryGetProperty("IncludeUsersThatHaveLoggedIn", out token) && token.Type != JTokenType.Null)
				{
					IncludeUsersThatHaveLoggedIn = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
				if(source.TryGetProperty("IncludeUsersThatHaveNotLoggedIn", out token) && token.Type != JTokenType.Null)
				{
					IncludeUsersThatHaveNotLoggedIn = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
				if(source.TryGetProperty("IncludeDisabledUsers", out token) && token.Type != JTokenType.Null)
				{
					IncludeDisabledUsers = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
				if(source.TryGetProperty("IncludeSharedAddressBookUsers", out token) && token.Type != JTokenType.Null)
				{
					IncludeSharedAddressBookUsers = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
				if(source.TryGetProperty("IncludeUsersWithAssignedQuota", out token) && token.Type != JTokenType.Null)
				{
					IncludeUsersWithAssignedQuota = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
				if(source.TryGetProperty("IncludeUsersWithAssignedPolicies", out token) && token.Type != JTokenType.Null)
				{
					IncludeUsersWithAssignedPolicies = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
			}
		}
	}
}