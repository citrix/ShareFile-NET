// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2015 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using ShareFile.Api.Client.Extensions;

namespace ShareFile.Api.Models 
{
	public class QueryPaging : ODataObject 
	{

		/// <summary>
		/// Deprecated, use the Skip property to skip some number of results
		/// </summary>
		public int PageNumber { get; set; }

		/// <summary>
		/// Deprecated, use the Count property
		/// </summary>
		public int PageSize { get; set; }

		/// <summary>
		/// The number of search results to get
		/// </summary>
		public int Count { get; set; }

		/// <summary>
		/// How many results to skip before returning "Count" number results.
		/// </summary>
		public int Skip { get; set; }

		public override void Copy(ODataObject source, JsonSerializer serializer)
		{
			if(source == null || serializer == null) return;
			base.Copy(source, serializer);

			var typedSource = source as QueryPaging;
			if(typedSource != null)
			{
				PageNumber = typedSource.PageNumber;
				PageSize = typedSource.PageSize;
				Count = typedSource.Count;
				Skip = typedSource.Skip;
			}
			else
			{
				JToken token;
				if(source.TryGetProperty("PageNumber", out token) && token.Type != JTokenType.Null)
				{
					PageNumber = (int)serializer.Deserialize(token.CreateReader(), typeof(int));
				}
				if(source.TryGetProperty("PageSize", out token) && token.Type != JTokenType.Null)
				{
					PageSize = (int)serializer.Deserialize(token.CreateReader(), typeof(int));
				}
				if(source.TryGetProperty("Count", out token) && token.Type != JTokenType.Null)
				{
					Count = (int)serializer.Deserialize(token.CreateReader(), typeof(int));
				}
				if(source.TryGetProperty("Skip", out token) && token.Type != JTokenType.Null)
				{
					Skip = (int)serializer.Deserialize(token.CreateReader(), typeof(int));
				}
			}
		}
	}
}