// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2014 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using ShareFile.Api.Client.Extensions;

namespace ShareFile.Api.Models 
{
#if ShareFile
	public class ShareFileRepresentative : Principal 
	{

		public User User { get; set; }

		public SafeEnum<RepresentativeType> UserType { get; set; }

		public bool? CanViewStats { get; set; }

		public bool? CanPostNews { get; set; }

		public bool? CanPostFeatures { get; set; }

		public bool? CanPostBugs { get; set; }

		public string RepresentativeName { get; set; }

		public string FirstName { get; set; }

		public string LastName { get; set; }

		public int? Extension { get; set; }

		public bool? CanBeTechnicalContact { get; set; }

		public bool? IsPresent { get; set; }

		public bool? IsSourceOption { get; set; }

		public string MobilePhone { get; set; }

		public string OfficePhone { get; set; }

		public string EmailSignature { get; set; }

		public string ShareFileRepresentativeImageFile { get; set; }

		public override void Copy(ODataObject source, JsonSerializer serializer)
		{
			if(source == null || serializer == null) return;
			base.Copy(source, serializer);

			var typedSource = source as ShareFileRepresentative;
			if(typedSource != null)
			{
				User = typedSource.User;
				UserType = typedSource.UserType;
				CanViewStats = typedSource.CanViewStats;
				CanPostNews = typedSource.CanPostNews;
				CanPostFeatures = typedSource.CanPostFeatures;
				CanPostBugs = typedSource.CanPostBugs;
				RepresentativeName = typedSource.RepresentativeName;
				FirstName = typedSource.FirstName;
				LastName = typedSource.LastName;
				Extension = typedSource.Extension;
				CanBeTechnicalContact = typedSource.CanBeTechnicalContact;
				IsPresent = typedSource.IsPresent;
				IsSourceOption = typedSource.IsSourceOption;
				MobilePhone = typedSource.MobilePhone;
				OfficePhone = typedSource.OfficePhone;
				EmailSignature = typedSource.EmailSignature;
				ShareFileRepresentativeImageFile = typedSource.ShareFileRepresentativeImageFile;
			}
			else
			{
				JToken token;
				if(source.TryGetProperty("User", out token) && token.Type != JTokenType.Null)
				{
					User = (User)serializer.Deserialize(token.CreateReader(), typeof(User));
				}
				if(source.TryGetProperty("UserType", out token) && token.Type != JTokenType.Null)
				{
					UserType = (SafeEnum<RepresentativeType>)serializer.Deserialize(token.CreateReader(), typeof(SafeEnum<RepresentativeType>));
				}
				if(source.TryGetProperty("CanViewStats", out token) && token.Type != JTokenType.Null)
				{
					CanViewStats = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
				if(source.TryGetProperty("CanPostNews", out token) && token.Type != JTokenType.Null)
				{
					CanPostNews = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
				if(source.TryGetProperty("CanPostFeatures", out token) && token.Type != JTokenType.Null)
				{
					CanPostFeatures = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
				if(source.TryGetProperty("CanPostBugs", out token) && token.Type != JTokenType.Null)
				{
					CanPostBugs = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
				if(source.TryGetProperty("RepresentativeName", out token) && token.Type != JTokenType.Null)
				{
					RepresentativeName = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("FirstName", out token) && token.Type != JTokenType.Null)
				{
					FirstName = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("LastName", out token) && token.Type != JTokenType.Null)
				{
					LastName = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("Extension", out token) && token.Type != JTokenType.Null)
				{
					Extension = (int?)serializer.Deserialize(token.CreateReader(), typeof(int?));
				}
				if(source.TryGetProperty("CanBeTechnicalContact", out token) && token.Type != JTokenType.Null)
				{
					CanBeTechnicalContact = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
				if(source.TryGetProperty("IsPresent", out token) && token.Type != JTokenType.Null)
				{
					IsPresent = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
				if(source.TryGetProperty("IsSourceOption", out token) && token.Type != JTokenType.Null)
				{
					IsSourceOption = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
				if(source.TryGetProperty("MobilePhone", out token) && token.Type != JTokenType.Null)
				{
					MobilePhone = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("OfficePhone", out token) && token.Type != JTokenType.Null)
				{
					OfficePhone = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("EmailSignature", out token) && token.Type != JTokenType.Null)
				{
					EmailSignature = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("ShareFileRepresentativeImageFile", out token) && token.Type != JTokenType.Null)
				{
					ShareFileRepresentativeImageFile = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
			}
		}
	}
#endif
}