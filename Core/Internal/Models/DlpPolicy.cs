// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2015 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Net;

using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using ShareFile.Api.Client.Extensions;
using ShareFile.Api.Client.Exceptions;

namespace ShareFile.Api.Models 
{
#if ShareFile
	public class DlpPolicy : ODataObject 
	{

		/// <summary>
		/// Localized display name of this policy.
		/// </summary>
		public string Name { get; set; }

		/// <summary>
		/// Localized description of this policy.
		/// </summary>
		public string Description { get; set; }

		/// <summary>
		/// File scan status associated with this policy.
		/// </summary>
		public SafeEnum<DlpStatus> Status { get; set; }

		/// <summary>
		/// If true, anonymous share recipients can download Items which have this policy.
		/// </summary>
		public bool? AnonymousUserCanDownload { get; set; }

		/// <summary>
		/// If true, Client users can download Items which have this policy.
		/// </summary>
		public bool? ClientUserCanDownload { get; set; }

		/// <summary>
		/// If true, Client users can share Items which have this policy.
		/// </summary>
		public bool? ClientUserCanShare { get; set; }

		/// <summary>
		/// If true, Employee users can download Items which have this policy.
		/// </summary>
		public bool? EmployeeUserCanDownload { get; set; }

		/// <summary>
		/// If true, Employee users can share Items which have this policy.
		/// </summary>
		public bool? EmployeeUserCanShare { get; set; }

		public override void Copy(ODataObject source, JsonSerializer serializer)
		{
			if(source == null || serializer == null) return;
			base.Copy(source, serializer);

			var typedSource = source as DlpPolicy;
			if(typedSource != null)
			{
				Name = typedSource.Name;
				Description = typedSource.Description;
				Status = typedSource.Status;
				AnonymousUserCanDownload = typedSource.AnonymousUserCanDownload;
				ClientUserCanDownload = typedSource.ClientUserCanDownload;
				ClientUserCanShare = typedSource.ClientUserCanShare;
				EmployeeUserCanDownload = typedSource.EmployeeUserCanDownload;
				EmployeeUserCanShare = typedSource.EmployeeUserCanShare;
			}
			else
			{
				JToken token;
				if(source.TryGetProperty("Name", out token) && token.Type != JTokenType.Null)
				{
					Name = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("Description", out token) && token.Type != JTokenType.Null)
				{
					Description = (string)serializer.Deserialize(token.CreateReader(), typeof(string));
				}
				if(source.TryGetProperty("Status", out token) && token.Type != JTokenType.Null)
				{
					Status = (SafeEnum<DlpStatus>)serializer.Deserialize(token.CreateReader(), typeof(SafeEnum<DlpStatus>));
				}
				if(source.TryGetProperty("AnonymousUserCanDownload", out token) && token.Type != JTokenType.Null)
				{
					AnonymousUserCanDownload = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
				if(source.TryGetProperty("ClientUserCanDownload", out token) && token.Type != JTokenType.Null)
				{
					ClientUserCanDownload = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
				if(source.TryGetProperty("ClientUserCanShare", out token) && token.Type != JTokenType.Null)
				{
					ClientUserCanShare = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
				if(source.TryGetProperty("EmployeeUserCanDownload", out token) && token.Type != JTokenType.Null)
				{
					EmployeeUserCanDownload = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
				if(source.TryGetProperty("EmployeeUserCanShare", out token) && token.Type != JTokenType.Null)
				{
					EmployeeUserCanShare = (bool?)serializer.Deserialize(token.CreateReader(), typeof(bool?));
				}
			}
		}
	}
#endif
}