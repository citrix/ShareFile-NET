// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2018 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using ShareFile.Api.Client;
using ShareFile.Api.Client.Extensions;
using ShareFile.Api.Client.Models;
using ShareFile.Api.Client.Requests;


namespace ShareFile.Api.Client.Entities
{
    public interface IDevicesEntity : IEntityBase
    {
        
        /// <summary>
        /// Get Device Users for Current User
        /// </summary>
        /// <returns>
        /// A feed of DeviceUser objects
        /// </returns>
        IQuery<ODataFeed<DeviceUser>> Get();
        
        /// <summary>
        /// Get Device by ID
        /// </summary>
        /// <param name="url"></param>
        /// <returns>
        /// Device
        /// </returns>
        IQuery<Device> Get(Uri url);
        
        /// <summary>
        /// Get Devices for given User
        /// </summary>
        /// <param name="parentUrl"></param>
        /// <returns>
        /// List of Devices
        /// </returns>
        IQuery<ODataFeed<DeviceUser>> GetByUser(Uri parentUrl);
        
        /// <summary>
        /// Delete specific Device for given User
        /// </summary>
        /// <param name="parentUrl"></param>
        /// <param name="id"></param>
        /// <returns>
        /// No content
        /// </returns>
        IQuery DeleteByUser(Uri parentUrl, string id);
        
        /// <summary>
        /// Wipe Device
        /// </summary>
        /// <param name="deviceUrl"></param>
        /// <param name="userid"></param>
        /// <returns>
        /// no data on success
        /// </returns>
        IQuery Wipe(Uri deviceUrl, string userid = null);
        
        /// <summary>
        /// Lock Device
        /// </summary>
        /// <param name="deviceUrl"></param>
        /// <param name="userid"></param>
        /// <returns>
        /// no data on success
        /// </returns>
        IQuery Lock(Uri deviceUrl, string userid = null);
        
        /// <summary>
        /// Unlock Device
        /// </summary>
        /// <param name="deviceUrl"></param>
        /// <param name="userid"></param>
        /// <returns>
        /// no data on success
        /// </returns>
        IQuery Unlock(Uri deviceUrl, string userid = null);
    }

    public class DevicesEntity : EntityBase, IDevicesEntity
    {
        public DevicesEntity (IShareFileClient client)
            : base (client, "Devices")
        { }
        
        
        /// <summary>
        /// Get Device Users for Current User
        /// </summary>
        /// <returns>
        /// A feed of DeviceUser objects
        /// </returns>
        public IQuery<ODataFeed<DeviceUser>> Get()
        {
            var sfApiQuery = new ShareFile.Api.Client.Requests.Query<ODataFeed<DeviceUser>>(Client);
            sfApiQuery.From("Devices");
            sfApiQuery.HttpMethod = "GET";	
            return sfApiQuery;
        }
        
        /// <summary>
        /// Get Device by ID
        /// </summary>
        /// <param name="url"></param>
        /// <returns>
        /// Device
        /// </returns>
        public IQuery<Device> Get(Uri url)
        {
            var sfApiQuery = new ShareFile.Api.Client.Requests.Query<Device>(Client);
            sfApiQuery.Uri(url);
            sfApiQuery.HttpMethod = "GET";	
            return sfApiQuery;
        }
        
        /// <summary>
        /// Get Devices for given User
        /// </summary>
        /// <param name="parentUrl"></param>
        /// <returns>
        /// List of Devices
        /// </returns>
        public IQuery<ODataFeed<DeviceUser>> GetByUser(Uri parentUrl)
        {
            var sfApiQuery = new ShareFile.Api.Client.Requests.Query<ODataFeed<DeviceUser>>(Client);
            sfApiQuery.Action("Devices");
            sfApiQuery.Uri(parentUrl);
            sfApiQuery.HttpMethod = "GET";	
            return sfApiQuery;
        }
        
        /// <summary>
        /// Delete specific Device for given User
        /// </summary>
        /// <param name="parentUrl"></param>
        /// <param name="id"></param>
        /// <returns>
        /// No content
        /// </returns>
        public IQuery DeleteByUser(Uri parentUrl, string id)
        {
            var sfApiQuery = new ShareFile.Api.Client.Requests.Query(Client);
            sfApiQuery.Action("Devices");
            sfApiQuery.Uri(parentUrl);
            sfApiQuery.ActionIds(id);
            sfApiQuery.HttpMethod = "DELETE";	
            return sfApiQuery;
        }
        
        /// <summary>
        /// Wipe Device
        /// </summary>
        /// <param name="deviceUrl"></param>
        /// <param name="userid"></param>
        /// <returns>
        /// no data on success
        /// </returns>
        public IQuery Wipe(Uri deviceUrl, string userid = null)
        {
            var sfApiQuery = new ShareFile.Api.Client.Requests.Query(Client);
            sfApiQuery.Action("Wipe");
            sfApiQuery.Uri(deviceUrl);
            sfApiQuery.QueryString("userid", userid);
            sfApiQuery.HttpMethod = "POST";	
            return sfApiQuery;
        }
        
        /// <summary>
        /// Lock Device
        /// </summary>
        /// <param name="deviceUrl"></param>
        /// <param name="userid"></param>
        /// <returns>
        /// no data on success
        /// </returns>
        public IQuery Lock(Uri deviceUrl, string userid = null)
        {
            var sfApiQuery = new ShareFile.Api.Client.Requests.Query(Client);
            sfApiQuery.Action("Lock");
            sfApiQuery.Uri(deviceUrl);
            sfApiQuery.QueryString("userid", userid);
            sfApiQuery.HttpMethod = "POST";	
            return sfApiQuery;
        }
        
        /// <summary>
        /// Unlock Device
        /// </summary>
        /// <param name="deviceUrl"></param>
        /// <param name="userid"></param>
        /// <returns>
        /// no data on success
        /// </returns>
        public IQuery Unlock(Uri deviceUrl, string userid = null)
        {
            var sfApiQuery = new ShareFile.Api.Client.Requests.Query(Client);
            sfApiQuery.Action("Unlock");
            sfApiQuery.Uri(deviceUrl);
            sfApiQuery.QueryString("userid", userid);
            sfApiQuery.HttpMethod = "POST";	
            return sfApiQuery;
        }
    }
}
