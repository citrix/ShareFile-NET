// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2015 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.IO;
using ShareFile.Api.Models;
using ShareFile.Api.Client;
using ShareFile.Api.Client.Requests;
using ShareFile.Api.Client.Extensions;

namespace ShareFile.Api.Client.Entities
{
    public interface IFavoriteFoldersEntity : IEntityBase
    {
        
        /// <summary>
        /// Get List of FavoriteFolders
        /// </summary>
        /// <remarks>
        /// Retrieves the list of Favorite folders for a given user.
        /// </remarks>
        /// <param name="url"></param>
        /// <returns>
        /// A list of Favorite Folders specified by this user
        /// </returns>
        IQuery<ODataFeed<FavoriteFolder>> GetByUser(Uri url);
        
        /// <summary>
        /// Get FavoriteFolder
        /// </summary>
        /// <remarks>
        /// Retrieves a single Favorite Folder
        /// </remarks>
        /// <param name="userid"></param>
        /// <param name="itemUrl"></param>
        /// <returns>
        /// A list of Favorite Folders specified by this user
        /// </returns>
        IQuery<FavoriteFolder> GetByUser(Uri itemUrl, string userid);
        
        /// <summary>
        /// Get Item as Favorite Folder
        /// </summary>
        /// <remarks>
        /// Retrieves a Favorite Folder representation of a given parent Item
        /// </remarks>
        /// <param name="parentUrl"></param>
        /// <returns>
        /// The specified Favorite Folder if it belongs to the specified parent Item
        /// </returns>
        IQuery<FavoriteFolder> GetFavoriteFolderByItem(Uri parentUrl);
        
        /// <summary>
        /// Get FavoriteFolder
        /// </summary>
        /// <remarks>
        /// Retrieve a single Favorite Folder from a give user
        /// </remarks>
        /// <returns>
        /// The selected Favorite Folder
        /// </returns>
        IQuery<FavoriteFolder> Get(Uri url);
        
        /// <summary>
        /// Create FavoriteFolder
        /// </summary>
        /// <example>
        /// {
        /// "Folder": { "Id":"fo96aec5-d637-4124-bcc9-c86fd7301e4d" },
        /// "FolderAlias" : "alias"
        /// }
        /// </example>
        /// <remarks>
        /// Adds an existing folder to the list of favorites of a given user.
        /// </remarks>
        /// <param name="url"></param>
        /// <param name="folder"></param>
        /// <returns>
        /// A new FavoriteFolder record
        /// </returns>
        IQuery<FavoriteFolder> CreateByUser(Uri url, FavoriteFolder folder);
        
        /// <summary>
        /// Delete FavoriteFolder
        /// </summary>
        /// <remarks>
        /// Removes a favorite folder from a user's list.
        /// </remarks>
        /// <param name="url"></param>
        /// <param name="itemid"></param>
        IQuery Delete(Uri url, string itemid);
        IQuery DeleteByUser(Uri url, string itemId);
    }

    public class FavoriteFoldersEntity : EntityBase, IFavoriteFoldersEntity
    {
        public FavoriteFoldersEntity (IShareFileClient client)
            : base (client, "FavoriteFolders")
        { }
        
        
        /// <summary>
        /// Get List of FavoriteFolders
        /// </summary>
        /// <remarks>
        /// Retrieves the list of Favorite folders for a given user.
        /// </remarks>
        /// <param name="url"></param>
        /// <returns>
        /// A list of Favorite Folders specified by this user
        /// </returns>
        public IQuery<ODataFeed<FavoriteFolder>> GetByUser(Uri url)
        {
            var sfApiQuery = new ShareFile.Api.Client.Requests.Query<ODataFeed<FavoriteFolder>>(Client);
		    sfApiQuery.Action("FavoriteFolders");
            sfApiQuery.Uri(url);
            sfApiQuery.HttpMethod = "GET";	
		    return sfApiQuery;
        }
        
        /// <summary>
        /// Get FavoriteFolder
        /// </summary>
        /// <remarks>
        /// Retrieves a single Favorite Folder
        /// </remarks>
        /// <param name="userid"></param>
        /// <param name="itemUrl"></param>
        /// <returns>
        /// A list of Favorite Folders specified by this user
        /// </returns>
        public IQuery<FavoriteFolder> GetByUser(Uri itemUrl, string userid)
        {
            var sfApiQuery = new ShareFile.Api.Client.Requests.Query<FavoriteFolder>(Client);
		    sfApiQuery.Action("FavoriteFolders");
            sfApiQuery.Uri(itemUrl);
            sfApiQuery.ActionIds(userid);
            sfApiQuery.HttpMethod = "GET";	
		    return sfApiQuery;
        }
        
        /// <summary>
        /// Get Item as Favorite Folder
        /// </summary>
        /// <remarks>
        /// Retrieves a Favorite Folder representation of a given parent Item
        /// </remarks>
        /// <param name="parentUrl"></param>
        /// <returns>
        /// The specified Favorite Folder if it belongs to the specified parent Item
        /// </returns>
        public IQuery<FavoriteFolder> GetFavoriteFolderByItem(Uri parentUrl)
        {
            var sfApiQuery = new ShareFile.Api.Client.Requests.Query<FavoriteFolder>(Client);
		    sfApiQuery.Action("FavoriteFolder");
            sfApiQuery.Uri(parentUrl);
            sfApiQuery.HttpMethod = "GET";	
		    return sfApiQuery;
        }
        
        /// <summary>
        /// Get FavoriteFolder
        /// </summary>
        /// <remarks>
        /// Retrieve a single Favorite Folder from a give user
        /// </remarks>
        /// <returns>
        /// The selected Favorite Folder
        /// </returns>
        public IQuery<FavoriteFolder> Get(Uri url)
        {
            var sfApiQuery = new ShareFile.Api.Client.Requests.Query<FavoriteFolder>(Client);
            sfApiQuery.Uri(url);
            sfApiQuery.HttpMethod = "GET";	
		    return sfApiQuery;
        }
        
        /// <summary>
        /// Create FavoriteFolder
        /// </summary>
        /// <example>
        /// {
        /// "Folder": { "Id":"fo96aec5-d637-4124-bcc9-c86fd7301e4d" },
        /// "FolderAlias" : "alias"
        /// }
        /// </example>
        /// <remarks>
        /// Adds an existing folder to the list of favorites of a given user.
        /// </remarks>
        /// <param name="url"></param>
        /// <param name="folder"></param>
        /// <returns>
        /// A new FavoriteFolder record
        /// </returns>
        public IQuery<FavoriteFolder> CreateByUser(Uri url, FavoriteFolder folder)
        {
            var sfApiQuery = new ShareFile.Api.Client.Requests.Query<FavoriteFolder>(Client);
		    sfApiQuery.Action("FavoriteFolders");
            sfApiQuery.Uri(url);
            sfApiQuery.Body = folder;
            sfApiQuery.HttpMethod = "POST";	
		    return sfApiQuery;
        }
        
        /// <summary>
        /// Delete FavoriteFolder
        /// </summary>
        /// <remarks>
        /// Removes a favorite folder from a user's list.
        /// </remarks>
        /// <param name="url"></param>
        /// <param name="itemid"></param>
        public IQuery Delete(Uri url, string itemid)
        {
            var sfApiQuery = new ShareFile.Api.Client.Requests.Query(Client);
		    sfApiQuery.Action("FavoriteFolders");
            sfApiQuery.Uri(url);
            sfApiQuery.ActionIds(itemid);
            sfApiQuery.HttpMethod = "DELETE";	
		    return sfApiQuery;
        }
        public IQuery DeleteByUser(Uri url, string itemId)
        {
            var sfApiQuery = new ShareFile.Api.Client.Requests.Query(Client);
		    sfApiQuery.Action("FavoriteFolders");
            sfApiQuery.Uri(url);
            sfApiQuery.ActionIds(itemId);
            sfApiQuery.HttpMethod = "DELETE";	
		    return sfApiQuery;
        }
    }
}