// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2014 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------
using ShareFile.Api.Models;

namespace ShareFile.Api.Client.Internal.Models
{
	public class EntityTypeMapInternal
    {
        private static bool registered = false;
        public static void RegisterInternalModels()
		{
			if(registered)
			{
				return;
            }

            EntityTypeMap.AddEntity("AppliedPlanAddOns", typeof(AppliedPlanAddOns));
            EntityTypeMap.AddEntity("AppliedPlanAddOnss", typeof(AppliedPlanAddOns));
            EntityTypeMap.AddEntity("Billing", typeof(Billing));
            EntityTypeMap.AddEntity("Billings", typeof(Billing));
            EntityTypeMap.AddEntity("BillingAddOn", typeof(BillingAddOn));
            EntityTypeMap.AddEntity("BillingAddOns", typeof(BillingAddOn));
            EntityTypeMap.AddEntity("CustomBillingEntry", typeof(CustomBillingEntry));
            EntityTypeMap.AddEntity("CustomBillingEntrys", typeof(CustomBillingEntry));
            EntityTypeMap.AddEntity("EnterpriseOrder", typeof(EnterpriseOrder));
            EntityTypeMap.AddEntity("EnterpriseOrders", typeof(EnterpriseOrder));
            EntityTypeMap.AddEntity("EnterpriseReseller", typeof(EnterpriseReseller));
            EntityTypeMap.AddEntity("EnterpriseResellers", typeof(EnterpriseReseller));
            EntityTypeMap.AddEntity("OAuthCode", typeof(OAuthCode));
            EntityTypeMap.AddEntity("OAuthCodes", typeof(OAuthCode));
            EntityTypeMap.AddEntity("PlanAddon", typeof(PlanAddon));
            EntityTypeMap.AddEntity("PlanAddons", typeof(PlanAddon));
            EntityTypeMap.AddEntity("InAppPurchase", typeof(InAppPurchase));
            EntityTypeMap.AddEntity("InAppPurchases", typeof(InAppPurchase));
            EntityTypeMap.AddEntity("TrialPeriod", typeof(TrialPeriod));
            EntityTypeMap.AddEntity("TrialPeriods", typeof(TrialPeriod));
            EntityTypeMap.AddEntity("PlanAddonUser", typeof(PlanAddonUser));
            EntityTypeMap.AddEntity("PlanAddonUsers", typeof(PlanAddonUser));
            EntityTypeMap.AddEntity("OAuthClient", typeof(OAuthClient));
            EntityTypeMap.AddEntity("OAuthClients", typeof(OAuthClient));
            EntityTypeMap.AddEntity("Reseller", typeof(Reseller));
            EntityTypeMap.AddEntity("Resellers", typeof(Reseller));
            EntityTypeMap.AddEntity("ShareFileRepresentative", typeof(ShareFileRepresentative));
            EntityTypeMap.AddEntity("ShareFileRepresentatives", typeof(ShareFileRepresentative));
            EntityTypeMap.AddEntity("FreeTrialAccount", typeof(FreeTrialAccount));
            EntityTypeMap.AddEntity("FreeTrialAccounts", typeof(FreeTrialAccount));
            EntityTypeMap.AddEntity("OutlookInformation", typeof(OutlookInformation));
            EntityTypeMap.AddEntity("OutlookInformations", typeof(OutlookInformation));
            EntityTypeMap.AddEntity("OutlookInformationOptionBool", typeof(OutlookInformationOptionBool));
            EntityTypeMap.AddEntity("OutlookInformationOptionBools", typeof(OutlookInformationOptionBool));
            EntityTypeMap.AddEntity("OutlookInformationOptionString", typeof(OutlookInformationOptionString));
            EntityTypeMap.AddEntity("OutlookInformationOptionStrings", typeof(OutlookInformationOptionString));
            EntityTypeMap.AddEntity("OutlookInformationOptionInt", typeof(OutlookInformationOptionInt));
            EntityTypeMap.AddEntity("OutlookInformationOptionInts", typeof(OutlookInformationOptionInt));
            EntityTypeMap.AddEntity("AzureSBTopicsEndPointInfo", typeof(AzureSBTopicsEndPointInfo));
            EntityTypeMap.AddEntity("AzureSBTopicsEndPointInfos", typeof(AzureSBTopicsEndPointInfo));
            EntityTypeMap.AddEntity("AzureSBTopicsResponse", typeof(AzureSBTopicsResponse));
            EntityTypeMap.AddEntity("AzureSBTopicsResponses", typeof(AzureSBTopicsResponse));
            EntityTypeMap.AddEntity("UsagePlan", typeof(UsagePlan));
            EntityTypeMap.AddEntity("UsagePlans", typeof(UsagePlan));
            EntityTypeMap.AddEntity("UsagePlanAddOn", typeof(UsagePlanAddOn));
            EntityTypeMap.AddEntity("UsagePlanAddOns", typeof(UsagePlanAddOn));

            registered = true;
        }
    }
}