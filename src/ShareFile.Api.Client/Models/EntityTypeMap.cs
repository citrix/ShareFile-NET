// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2018 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;

namespace ShareFile.Api.Client.Models
{
	public static class EntityTypeMap
	{
        private static Dictionary<string, Type> _entityTypeMap = new Dictionary<string, Type>();

		public static Dictionary<string, Type> GetEntityTypeMap()
		{
            lock (_entityTypeMap)
            {
                if(_entityTypeMap.Count == 0)
			    {
                    _entityTypeMap.Add("AccessControlsBulkParams", typeof(AccessControlsBulkParams));
                    _entityTypeMap.Add("AccessControlsBulkParamss", typeof(AccessControlsBulkParams));
                    _entityTypeMap.Add("AccessControlParam", typeof(AccessControlParam));
                    _entityTypeMap.Add("AccessControlParams", typeof(AccessControlParam));
                    _entityTypeMap.Add("BaseAccountCreationParameters", typeof(BaseAccountCreationParameters));
                    _entityTypeMap.Add("BaseAccountCreationParameterss", typeof(BaseAccountCreationParameters));
                    _entityTypeMap.Add("BaseCspAccountParameters", typeof(BaseCspAccountParameters));
                    _entityTypeMap.Add("BaseCspAccountParameterss", typeof(BaseCspAccountParameters));
                    _entityTypeMap.Add("CspTenantAccountParameters", typeof(CspTenantAccountParameters));
                    _entityTypeMap.Add("CspTenantAccountParameterss", typeof(CspTenantAccountParameters));
                    _entityTypeMap.Add("BillingContact", typeof(BillingContact));
                    _entityTypeMap.Add("BillingContacts", typeof(BillingContact));
                    _entityTypeMap.Add("CompanyContactInformation", typeof(CompanyContactInformation));
                    _entityTypeMap.Add("CompanyContactInformations", typeof(CompanyContactInformation));
                    _entityTypeMap.Add("RequestedPlan", typeof(RequestedPlan));
                    _entityTypeMap.Add("RequestedPlans", typeof(RequestedPlan));
                    _entityTypeMap.Add("AccountMessageCode", typeof(AccountMessageCode));
                    _entityTypeMap.Add("AccountMessageCodes", typeof(AccountMessageCode));
                    _entityTypeMap.Add("AccessControlsCloneParams", typeof(AccessControlsCloneParams));
                    _entityTypeMap.Add("AccessControlsCloneParamss", typeof(AccessControlsCloneParams));
                    _entityTypeMap.Add("ActivationToken", typeof(ActivationToken));
                    _entityTypeMap.Add("ActivationTokens", typeof(ActivationToken));
                    _entityTypeMap.Add("Bandwidth", typeof(Bandwidth));
                    _entityTypeMap.Add("Bandwidths", typeof(Bandwidth));
                    _entityTypeMap.Add("Cancellation", typeof(Cancellation));
                    _entityTypeMap.Add("Cancellations", typeof(Cancellation));
                    _entityTypeMap.Add("CustomMessage", typeof(CustomMessage));
                    _entityTypeMap.Add("CustomMessages", typeof(CustomMessage));
                    _entityTypeMap.Add("EmailAddress", typeof(EmailAddress));
                    _entityTypeMap.Add("EmailAddresss", typeof(EmailAddress));
                    _entityTypeMap.Add("Favorite", typeof(Favorite));
                    _entityTypeMap.Add("Favorites", typeof(Favorite));
                    _entityTypeMap.Add("FileAndFolderSettingOptions", typeof(FileAndFolderSettingOptions));
                    _entityTypeMap.Add("FileAndFolderSettingOptionss", typeof(FileAndFolderSettingOptions));
                    _entityTypeMap.Add("ForbiddenOAuthClientNameWords", typeof(ForbiddenOAuthClientNameWords));
                    _entityTypeMap.Add("ForbiddenOAuthClientNameWordss", typeof(ForbiddenOAuthClientNameWords));
                    _entityTypeMap.Add("ReportFilter", typeof(ReportFilter));
                    _entityTypeMap.Add("ReportFilters", typeof(ReportFilter));
                    _entityTypeMap.Add("ActivityReportFilter", typeof(ActivityReportFilter));
                    _entityTypeMap.Add("ActivityReportFilters", typeof(ActivityReportFilter));
                    _entityTypeMap.Add("UserSummaryReportFilter", typeof(UserSummaryReportFilter));
                    _entityTypeMap.Add("UserSummaryReportFilters", typeof(UserSummaryReportFilter));
                    _entityTypeMap.Add("StorageCenterUrls", typeof(StorageCenterUrls));
                    _entityTypeMap.Add("StorageCenterUrlss", typeof(StorageCenterUrls));
                    _entityTypeMap.Add("TenantAccountCreationParameters", typeof(TenantAccountCreationParameters));
                    _entityTypeMap.Add("TenantAccountCreationParameterss", typeof(TenantAccountCreationParameters));
                    _entityTypeMap.Add("UserBulkOperationRequest", typeof(UserBulkOperationRequest));
                    _entityTypeMap.Add("UserBulkOperationRequests", typeof(UserBulkOperationRequest));
                    _entityTypeMap.Add("UserBulkDowngradeRequest", typeof(UserBulkDowngradeRequest));
                    _entityTypeMap.Add("UserBulkDowngradeRequests", typeof(UserBulkDowngradeRequest));
                    _entityTypeMap.Add("ResetPasswordRequest", typeof(ResetPasswordRequest));
                    _entityTypeMap.Add("ResetPasswordRequests", typeof(ResetPasswordRequest));
                    _entityTypeMap.Add("SubdomainAvailabilityResult", typeof(SubdomainAvailabilityResult));
                    _entityTypeMap.Add("SubdomainAvailabilityResults", typeof(SubdomainAvailabilityResult));
                    _entityTypeMap.Add("BrandingLinks", typeof(BrandingLinks));
                    _entityTypeMap.Add("BrandingLinkss", typeof(BrandingLinks));
                    _entityTypeMap.Add("PolicyUsage", typeof(PolicyUsage));
                    _entityTypeMap.Add("PolicyUsages", typeof(PolicyUsage));
                    _entityTypeMap.Add("FileAndFolderSettings", typeof(FileAndFolderSettings));
                    _entityTypeMap.Add("FileAndFolderSettingss", typeof(FileAndFolderSettings));
                    _entityTypeMap.Add("ConnectedApp", typeof(ConnectedApp));
                    _entityTypeMap.Add("ConnectedApps", typeof(ConnectedApp));
                    _entityTypeMap.Add("EditingPlatformInfo", typeof(EditingPlatformInfo));
                    _entityTypeMap.Add("EditingPlatformInfos", typeof(EditingPlatformInfo));
                    _entityTypeMap.Add("FolderInvite", typeof(FolderInvite));
                    _entityTypeMap.Add("FolderInvites", typeof(FolderInvite));
                    _entityTypeMap.Add("IrmClassification", typeof(IrmClassification));
                    _entityTypeMap.Add("IrmClassifications", typeof(IrmClassification));
                    _entityTypeMap.Add("IrmPrimaryAccessRightParams", typeof(IrmPrimaryAccessRightParams));
                    _entityTypeMap.Add("IrmPrimaryAccessRightParamss", typeof(IrmPrimaryAccessRightParams));
                    _entityTypeMap.Add("NotifyUsersParams", typeof(NotifyUsersParams));
                    _entityTypeMap.Add("NotifyUsersParamss", typeof(NotifyUsersParams));
                    _entityTypeMap.Add("PasswordPolicy", typeof(PasswordPolicy));
                    _entityTypeMap.Add("Policy", typeof(Policy));
                    _entityTypeMap.Add("Policies", typeof(Policy));
                    _entityTypeMap.Add("StoragePolicy", typeof(StoragePolicy));
                    _entityTypeMap.Add("StoragePolicys", typeof(StoragePolicy));
                    _entityTypeMap.Add("FileAndFolderPolicy", typeof(FileAndFolderPolicy));
                    _entityTypeMap.Add("FileAndFolderPolicys", typeof(FileAndFolderPolicy));
                    _entityTypeMap.Add("UserAccessPolicy", typeof(UserAccessPolicy));
                    _entityTypeMap.Add("UserAccessPolicys", typeof(UserAccessPolicy));
                    _entityTypeMap.Add("RemoteUpload", typeof(RemoteUpload));
                    _entityTypeMap.Add("RemoteUploads", typeof(RemoteUpload));
                    _entityTypeMap.Add("SalesTaxQuote", typeof(SalesTaxQuote));
                    _entityTypeMap.Add("SalesTaxQuotes", typeof(SalesTaxQuote));
                    _entityTypeMap.Add("SecurityQuestion", typeof(SecurityQuestion));
                    _entityTypeMap.Add("SecurityQuestions", typeof(SecurityQuestion));
                    _entityTypeMap.Add("Service", typeof(Service));
                    _entityTypeMap.Add("Services", typeof(Service));
                    _entityTypeMap.Add("ServicesCollection", typeof(ServicesCollection));
                    _entityTypeMap.Add("ServicesCollections", typeof(ServicesCollection));
                    _entityTypeMap.Add("ShareAccessRight", typeof(ShareAccessRight));
                    _entityTypeMap.Add("ShareAccessRights", typeof(ShareAccessRight));
                    _entityTypeMap.Add("StorageSettings", typeof(StorageSettings));
                    _entityTypeMap.Add("StorageSettingss", typeof(StorageSettings));
                    _entityTypeMap.Add("AccessControlBulkResult", typeof(AccessControlBulkResult));
                    _entityTypeMap.Add("AccessControlBulkResults", typeof(AccessControlBulkResult));
                    _entityTypeMap.Add("AccessControlFailedEntry", typeof(AccessControlFailedEntry));
                    _entityTypeMap.Add("AccessControlFailedEntrys", typeof(AccessControlFailedEntry));
                    _entityTypeMap.Add("ItemDlpInfo", typeof(ItemDlpInfo));
                    _entityTypeMap.Add("ItemDlpInfos", typeof(ItemDlpInfo));
                    _entityTypeMap.Add("ShareItemHistory", typeof(ShareItemHistory));
                    _entityTypeMap.Add("ShareItemHistorys", typeof(ShareItemHistory));
                    _entityTypeMap.Add("InboxMetadata", typeof(InboxMetadata));
                    _entityTypeMap.Add("InboxMetadatas", typeof(InboxMetadata));
                    _entityTypeMap.Add("FolderTemplate", typeof(FolderTemplate));
                    _entityTypeMap.Add("FolderTemplates", typeof(FolderTemplate));
                    _entityTypeMap.Add("FolderTemplateItem", typeof(FolderTemplateItem));
                    _entityTypeMap.Add("FolderTemplateItems", typeof(FolderTemplateItem));
                    _entityTypeMap.Add("ShareSettings", typeof(ShareSettings));
                    _entityTypeMap.Add("ShareSettingss", typeof(ShareSettings));
                    _entityTypeMap.Add("TwoFactorAuthApp", typeof(TwoFactorAuthApp));
                    _entityTypeMap.Add("TwoFactorAuthApps", typeof(TwoFactorAuthApp));
                    _entityTypeMap.Add("UserAccessSettings", typeof(UserAccessSettings));
                    _entityTypeMap.Add("UserAccessSettingss", typeof(UserAccessSettings));
                    _entityTypeMap.Add("UserConfirmRequirement", typeof(UserConfirmRequirement));
                    _entityTypeMap.Add("UserConfirmRequirements", typeof(UserConfirmRequirement));
                    _entityTypeMap.Add("UserPolicy", typeof(UserPolicy));
                    _entityTypeMap.Add("UserPolicies", typeof(UserPolicy));
                    _entityTypeMap.Add("UserUsage", typeof(UserUsage));
                    _entityTypeMap.Add("UserUsages", typeof(UserUsage));
                    _entityTypeMap.Add("DiskSpace", typeof(DiskSpace));
                    _entityTypeMap.Add("DiskSpaces", typeof(DiskSpace));
                    _entityTypeMap.Add("ReportRecord", typeof(ReportRecord));
                    _entityTypeMap.Add("ReportRecords", typeof(ReportRecord));
                    _entityTypeMap.Add("BillingInfo", typeof(BillingInfo));
                    _entityTypeMap.Add("BillingInfos", typeof(BillingInfo));
                    _entityTypeMap.Add("UploadRequestParams", typeof(UploadRequestParams));
                    _entityTypeMap.Add("UploadRequestParamss", typeof(UploadRequestParams));
                    _entityTypeMap.Add("RemoteUploadRequestParams", typeof(RemoteUploadRequestParams));
                    _entityTypeMap.Add("RemoteUploadRequestParamss", typeof(RemoteUploadRequestParams));
                    _entityTypeMap.Add("EncryptedEmail", typeof(EncryptedEmail));
                    _entityTypeMap.Add("EncryptedEmails", typeof(EncryptedEmail));
                    _entityTypeMap.Add("EncryptedEmailParams", typeof(EncryptedEmailParams));
                    _entityTypeMap.Add("EncryptedEmailParamss", typeof(EncryptedEmailParams));
                    _entityTypeMap.Add("EncryptedEmailReplyParams", typeof(EncryptedEmailReplyParams));
                    _entityTypeMap.Add("EncryptedEmailReplyParamss", typeof(EncryptedEmailReplyParams));
                    _entityTypeMap.Add("EncryptedEmailCreateParams", typeof(EncryptedEmailCreateParams));
                    _entityTypeMap.Add("EncryptedEmailCreateParamss", typeof(EncryptedEmailCreateParams));
                    _entityTypeMap.Add("EncryptedEmailSendParams", typeof(EncryptedEmailSendParams));
                    _entityTypeMap.Add("EncryptedEmailSendParamss", typeof(EncryptedEmailSendParams));
                    _entityTypeMap.Add("EncryptedEmailRecipient", typeof(EncryptedEmailRecipient));
                    _entityTypeMap.Add("EncryptedEmailRecipients", typeof(EncryptedEmailRecipient));
                    _entityTypeMap.Add("ESignature", typeof(ESignature));
                    _entityTypeMap.Add("ESignatures", typeof(ESignature));
                    _entityTypeMap.Add("MarketAnalytics", typeof(MarketAnalytics));
                    _entityTypeMap.Add("MarketAnalyticss", typeof(MarketAnalytics));
                    _entityTypeMap.Add("FileLock", typeof(FileLock));
                    _entityTypeMap.Add("FileLocks", typeof(FileLock));
                    _entityTypeMap.Add("ClientUpgradeWeb", typeof(ClientUpgradeWeb));
                    _entityTypeMap.Add("ClientUpgradeWebs", typeof(ClientUpgradeWeb));
                    _entityTypeMap.Add("PowerTools", typeof(PowerTools));
                    _entityTypeMap.Add("PowerToolss", typeof(PowerTools));
                    _entityTypeMap.Add("ConnectorGroupZone", typeof(ConnectorGroupZone));
                    _entityTypeMap.Add("ConnectorGroupZones", typeof(ConnectorGroupZone));
                    _entityTypeMap.Add("ConnectorGroupAccessControl", typeof(ConnectorGroupAccessControl));
                    _entityTypeMap.Add("ConnectorGroupAccessControls", typeof(ConnectorGroupAccessControl));
                    _entityTypeMap.Add("Report", typeof(Report));
                    _entityTypeMap.Add("Reports", typeof(Report));
                    _entityTypeMap.Add("PreviewPlatformInfo", typeof(PreviewPlatformInfo));
                    _entityTypeMap.Add("PreviewPlatformInfos", typeof(PreviewPlatformInfo));
                    _entityTypeMap.Add("ShareResendParams", typeof(ShareResendParams));
                    _entityTypeMap.Add("Support", typeof(Support));
                    _entityTypeMap.Add("Supports", typeof(Support));
                    _entityTypeMap.Add("SupportMethod", typeof(SupportMethod));
                    _entityTypeMap.Add("SupportMethods", typeof(SupportMethod));
                    _entityTypeMap.Add("PhoneSupport", typeof(PhoneSupport));
                    _entityTypeMap.Add("PhoneSupports", typeof(PhoneSupport));
                    _entityTypeMap.Add("EmailSupport", typeof(EmailSupport));
                    _entityTypeMap.Add("EmailSupports", typeof(EmailSupport));
                    _entityTypeMap.Add("DailyAvailability", typeof(DailyAvailability));
                    _entityTypeMap.Add("DailyAvailabilitys", typeof(DailyAvailability));
                    _entityTypeMap.Add("ToolInformation", typeof(ToolInformation));
                    _entityTypeMap.Add("ToolInformations", typeof(ToolInformation));
                    _entityTypeMap.Add("AccessControl", typeof(AccessControl));
                    _entityTypeMap.Add("AccessControls", typeof(AccessControl));
                    _entityTypeMap.Add("AccessControlDomains", typeof(AccessControlDomains));
                    _entityTypeMap.Add("Account", typeof(Account));
                    _entityTypeMap.Add("Accounts", typeof(Account));
                    _entityTypeMap.Add("AccountPreferences", typeof(AccountPreferences));
                    _entityTypeMap.Add("AsyncOperation", typeof(AsyncOperation));
                    _entityTypeMap.Add("AsyncOperations", typeof(AsyncOperation));
                    _entityTypeMap.Add("Capability", typeof(Capability));
                    _entityTypeMap.Add("Capabilities", typeof(Capability));
                    _entityTypeMap.Add("Device", typeof(Device));
                    _entityTypeMap.Add("Devices", typeof(Device));
                    _entityTypeMap.Add("DeviceUser", typeof(DeviceUser));
                    _entityTypeMap.Add("DeviceUsers", typeof(DeviceUser));
                    _entityTypeMap.Add("DeviceUserWipe", typeof(DeviceUserWipe));
                    _entityTypeMap.Add("DeviceUserWipes", typeof(DeviceUserWipe));
                    _entityTypeMap.Add("DeviceStatus", typeof(DeviceStatus));
                    _entityTypeMap.Add("DeviceStatuss", typeof(DeviceStatus));
                    _entityTypeMap.Add("DeviceWipeReport", typeof(DeviceWipeReport));
                    _entityTypeMap.Add("DeviceWipeReports", typeof(DeviceWipeReport));
                    _entityTypeMap.Add("DeviceLogEntry", typeof(DeviceLogEntry));
                    _entityTypeMap.Add("DeviceLogEntrys", typeof(DeviceLogEntry));
                    _entityTypeMap.Add("DownloadSpecification", typeof(DownloadSpecification));
                    _entityTypeMap.Add("DownloadSpecifications", typeof(DownloadSpecification));
                    _entityTypeMap.Add("EnsSubscriberConfiguration", typeof(EnsSubscriberConfiguration));
                    _entityTypeMap.Add("EnsSubscriberConfigurations", typeof(EnsSubscriberConfiguration));
                    _entityTypeMap.Add("EnsSubscriptionRequest", typeof(EnsSubscriptionRequest));
                    _entityTypeMap.Add("EnsSubscriptionRequests", typeof(EnsSubscriptionRequest));
                    _entityTypeMap.Add("EnsSubscriptionToken", typeof(EnsSubscriptionToken));
                    _entityTypeMap.Add("EnsSubscriptionTokens", typeof(EnsSubscriptionToken));
                    _entityTypeMap.Add("FindSubdomainParams", typeof(FindSubdomainParams));
                    _entityTypeMap.Add("FindSubdomainResult", typeof(FindSubdomainResult));
                    _entityTypeMap.Add("FindSubdomainResults", typeof(FindSubdomainResult));
                    _entityTypeMap.Add("GenericConfig", typeof(GenericConfig));
                    _entityTypeMap.Add("GenericConfigs", typeof(GenericConfig));
                    _entityTypeMap.Add("FavoriteFolder", typeof(FavoriteFolder));
                    _entityTypeMap.Add("FavoriteFolders", typeof(FavoriteFolder));
                    _entityTypeMap.Add("Industry", typeof(Industry));
                    _entityTypeMap.Add("Industrys", typeof(Industry));
                    _entityTypeMap.Add("Item", typeof(Item));
                    _entityTypeMap.Add("Items", typeof(Item));
                    _entityTypeMap.Add("File", typeof(File));
                    _entityTypeMap.Add("Files", typeof(File));
                    _entityTypeMap.Add("Folder", typeof(Folder));
                    _entityTypeMap.Add("Folders", typeof(Folder));
                    _entityTypeMap.Add("ConnectorGroup", typeof(ConnectorGroup));
                    _entityTypeMap.Add("ConnectorGroups", typeof(ConnectorGroup));
                    _entityTypeMap.Add("SymbolicLink", typeof(SymbolicLink));
                    _entityTypeMap.Add("SymbolicLinks", typeof(SymbolicLink));
                    _entityTypeMap.Add("Link", typeof(Link));
                    _entityTypeMap.Add("Links", typeof(Link));
                    _entityTypeMap.Add("Note", typeof(Note));
                    _entityTypeMap.Add("Notes", typeof(Note));
                    _entityTypeMap.Add("ItemInfo", typeof(ItemInfo));
                    _entityTypeMap.Add("ItemInfos", typeof(ItemInfo));
                    _entityTypeMap.Add("ItemProtocolLink", typeof(ItemProtocolLink));
                    _entityTypeMap.Add("ItemProtocolLinks", typeof(ItemProtocolLink));
                    _entityTypeMap.Add("Metadata", typeof(Metadata));
                    _entityTypeMap.Add("Metadatas", typeof(Metadata));
                    _entityTypeMap.Add("MobileSecuritySettings", typeof(MobileSecuritySettings));
                    _entityTypeMap.Add("SentNotification", typeof(SentNotification));
                    _entityTypeMap.Add("SentNotifications", typeof(SentNotification));
                    _entityTypeMap.Add("OutlookInformation", typeof(OutlookInformation));
                    _entityTypeMap.Add("OutlookInformations", typeof(OutlookInformation));
                    _entityTypeMap.Add("OutlookInformationOptionBool", typeof(OutlookInformationOptionBool));
                    _entityTypeMap.Add("OutlookInformationOptionBools", typeof(OutlookInformationOptionBool));
                    _entityTypeMap.Add("OutlookInformationOptionString", typeof(OutlookInformationOptionString));
                    _entityTypeMap.Add("OutlookInformationOptionStrings", typeof(OutlookInformationOptionString));
                    _entityTypeMap.Add("OutlookInformationOptionInt", typeof(OutlookInformationOptionInt));
                    _entityTypeMap.Add("OutlookInformationOptionInts", typeof(OutlookInformationOptionInt));
                    _entityTypeMap.Add("Principal", typeof(Principal));
                    _entityTypeMap.Add("Principals", typeof(Principal));
                    _entityTypeMap.Add("Contact", typeof(Contact));
                    _entityTypeMap.Add("Contacts", typeof(Contact));
                    _entityTypeMap.Add("Group", typeof(Group));
                    _entityTypeMap.Add("Groups", typeof(Group));
                    _entityTypeMap.Add("User", typeof(User));
                    _entityTypeMap.Add("Users", typeof(User));
                    _entityTypeMap.Add("AccountUser", typeof(AccountUser));
                    _entityTypeMap.Add("AccountUsers", typeof(AccountUser));
                    _entityTypeMap.Add("Zone", typeof(Zone));
                    _entityTypeMap.Add("Zones", typeof(Zone));
                    _entityTypeMap.Add("ProductDefaults", typeof(ProductDefaults));
                    _entityTypeMap.Add("Redirection", typeof(Redirection));
                    _entityTypeMap.Add("Redirections", typeof(Redirection));
                    _entityTypeMap.Add("RequireSubdomainResult", typeof(RequireSubdomainResult));
                    _entityTypeMap.Add("RequireSubdomainResults", typeof(RequireSubdomainResult));
                    _entityTypeMap.Add("RequireWebPopResult", typeof(RequireWebPopResult));
                    _entityTypeMap.Add("RequireWebPopResults", typeof(RequireWebPopResult));
                    _entityTypeMap.Add("SearchQuery", typeof(SearchQuery));
                    _entityTypeMap.Add("SearchQueries", typeof(SearchQuery));
                    _entityTypeMap.Add("Query", typeof(Query));
                    _entityTypeMap.Add("Queries", typeof(Query));
                    _entityTypeMap.Add("QueryPaging", typeof(QueryPaging));
                    _entityTypeMap.Add("QueryPagings", typeof(QueryPaging));
                    _entityTypeMap.Add("QuerySorting", typeof(QuerySorting));
                    _entityTypeMap.Add("QuerySortings", typeof(QuerySorting));
                    _entityTypeMap.Add("SimpleSearchQuery", typeof(SimpleSearchQuery));
                    _entityTypeMap.Add("SimpleSearchQueries", typeof(SimpleSearchQuery));
                    _entityTypeMap.Add("SimpleQuery", typeof(SimpleQuery));
                    _entityTypeMap.Add("SimpleQueries", typeof(SimpleQuery));
                    _entityTypeMap.Add("SearchResults", typeof(SearchResults));
                    _entityTypeMap.Add("AdvancedSearchResults", typeof(AdvancedSearchResults));
                    _entityTypeMap.Add("SearchResult", typeof(SearchResult));
                    _entityTypeMap.Add("Session", typeof(Session));
                    _entityTypeMap.Add("Sessions", typeof(Session));
                    _entityTypeMap.Add("Share", typeof(Share));
                    _entityTypeMap.Add("Shares", typeof(Share));
                    _entityTypeMap.Add("ShareAlias", typeof(ShareAlias));
                    _entityTypeMap.Add("ShareAliases", typeof(ShareAlias));
                    _entityTypeMap.Add("ShareRequestParams", typeof(ShareRequestParams));
                    _entityTypeMap.Add("ShareSendParams", typeof(ShareSendParams));
                    _entityTypeMap.Add("SSOAccountProvider", typeof(SSOAccountProvider));
                    _entityTypeMap.Add("SSOAccountProviders", typeof(SSOAccountProvider));
                    _entityTypeMap.Add("SSOInfoEntry", typeof(SSOInfoEntry));
                    _entityTypeMap.Add("SSOInfoEntries", typeof(SSOInfoEntry));
                    _entityTypeMap.Add("SSOInfo", typeof(SSOInfo));
                    _entityTypeMap.Add("SSOInfos", typeof(SSOInfo));
                    _entityTypeMap.Add("StorageCenter", typeof(StorageCenter));
                    _entityTypeMap.Add("StorageCenters", typeof(StorageCenter));
                    _entityTypeMap.Add("UploadSpecification", typeof(UploadSpecification));
                    _entityTypeMap.Add("UploadSpecifications", typeof(UploadSpecification));
                    _entityTypeMap.Add("UserConfirmationSettings", typeof(UserConfirmationSettings));
                    _entityTypeMap.Add("UserInfo", typeof(UserInfo));
                    _entityTypeMap.Add("UserInfos", typeof(UserInfo));
                    _entityTypeMap.Add("PlanFeatures", typeof(PlanFeatures));
                    _entityTypeMap.Add("UserPreferences", typeof(UserPreferences));
                    _entityTypeMap.Add("UserSecurity", typeof(UserSecurity));
                    _entityTypeMap.Add("UserSecurities", typeof(UserSecurity));
                    _entityTypeMap.Add("WebhookCapabilities", typeof(WebhookCapabilities));
                    _entityTypeMap.Add("WebhookCapabilitiess", typeof(WebhookCapabilities));
                    _entityTypeMap.Add("WebhookClient", typeof(WebhookClient));
                    _entityTypeMap.Add("WebhookClients", typeof(WebhookClient));
                    _entityTypeMap.Add("WebhookSignatureKeys", typeof(WebhookSignatureKeys));
                    _entityTypeMap.Add("WebhookSignatureKeyss", typeof(WebhookSignatureKeys));
                    _entityTypeMap.Add("WebhookSubscription", typeof(WebhookSubscription));
                    _entityTypeMap.Add("WebhookSubscriptions", typeof(WebhookSubscription));
                    _entityTypeMap.Add("SubscribedResourceEvent", typeof(SubscribedResourceEvent));
                    _entityTypeMap.Add("SubscribedResourceEvents", typeof(SubscribedResourceEvent));
                    _entityTypeMap.Add("SubscriptionContext", typeof(SubscriptionContext));
                    _entityTypeMap.Add("SubscriptionContexts", typeof(SubscriptionContext));
                    _entityTypeMap.Add("WebhookSupportedContext", typeof(WebhookSupportedContext));
                    _entityTypeMap.Add("WebhookSupportedContexts", typeof(WebhookSupportedContext));
                    _entityTypeMap.Add("WebhookSupportedEvents", typeof(WebhookSupportedEvents));
                    _entityTypeMap.Add("WebhookSupportedEventss", typeof(WebhookSupportedEvents));
                    _entityTypeMap.Add("CreateWorkflowParams", typeof(CreateWorkflowParams));
                    _entityTypeMap.Add("CreateWorkflowParamss", typeof(CreateWorkflowParams));
                    _entityTypeMap.Add("WorkflowParticipant", typeof(WorkflowParticipant));
                    _entityTypeMap.Add("WorkflowParticipants", typeof(WorkflowParticipant));
                    _entityTypeMap.Add("Workflow", typeof(Workflow));
                    _entityTypeMap.Add("Workflows", typeof(Workflow));
                    _entityTypeMap.Add("SupportFeedback", typeof(SupportFeedback));
                    _entityTypeMap.Add("SupportFeedbacks", typeof(SupportFeedback));
                    _entityTypeMap.Add("AccountZoneUsage", typeof(AccountZoneUsage));
                    _entityTypeMap.Add("AccountZoneUsages", typeof(AccountZoneUsage));
                    _entityTypeMap.Add("TenantZoneUsageReport", typeof(TenantZoneUsageReport));
                    _entityTypeMap.Add("TenantZoneUsageReports", typeof(TenantZoneUsageReport));
                    _entityTypeMap.Add("ZoneUsageBreakdown", typeof(ZoneUsageBreakdown));
                    _entityTypeMap.Add("ZoneUsageBreakdowns", typeof(ZoneUsageBreakdown));
			    }

                return _entityTypeMap;
            }
		}
        
        /// <summary>
        /// Add additional models to the type map.
        /// </summary>
        public static void AddEntity(string key, Type value)
        {
            if (!_entityTypeMap.ContainsKey(key))
            {
                lock (_entityTypeMap)
                {
                    if (!_entityTypeMap.ContainsKey(key))
                    {
                        _entityTypeMap.Add(key, value);
                    }
                }
            }
        }
    }
}