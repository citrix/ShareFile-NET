// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2015 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------
using ShareFile.Api.Client.Entities;
using ShareFile.Api.Client.Internal.Models;

namespace ShareFile.Api.Client
{
    public interface IInternalShareFileClient : IShareFileClient
    {
        IBillingEntityInternal Billing { get; }
        IEncryptedEmailsEntityInternal EncryptedEmails { get; }
        IFileLockEntityInternal FileLock { get; }
        INotificationsEntityInternal Notifications { get; }
        IOAuthClientsEntityInternal OAuthClients { get; }
        IPlanAddonsEntityInternal PlanAddons { get; }
        IReportsEntityInternal Reports { get; }
        IUsagePlansEntityInternal UsagePlans { get; }
        IAzureSBTopicsEntityInternal AzureSBTopics { get; }
        IConfigsEntityInternal Configs { get; }
        IDevicesEntityInternal Devices { get; }
        IQueuesEntityInternal Queues { get; }
    }

    public class InternalShareFileClient : ShareFileClient, IInternalShareFileClient
    {
        public InternalShareFileClient(string baseUri, Configuration configuration = null)
            : base(baseUri, configuration)
        {
            Billing = new BillingEntityInternal(this);
            EncryptedEmails = new EncryptedEmailsEntityInternal(this);
            FileLock = new FileLockEntityInternal(this);
            Notifications = new NotificationsEntityInternal(this);
            OAuthClients = new OAuthClientsEntityInternal(this);
            PlanAddons = new PlanAddonsEntityInternal(this);
            Reports = new ReportsEntityInternal(this);
            UsagePlans = new UsagePlansEntityInternal(this);
            AzureSBTopics = new AzureSBTopicsEntityInternal(this);
            Configs = new ConfigsEntityInternal(this);
            Devices = new DevicesEntityInternal(this);
            Queues = new QueuesEntityInternal(this);

            EntityTypeMapInternal.RegisterInternalModels();
        }

        public IBillingEntityInternal Billing { get; private set; }
        public IEncryptedEmailsEntityInternal EncryptedEmails { get; private set; }
        public IFileLockEntityInternal FileLock { get; private set; }
        public INotificationsEntityInternal Notifications { get; private set; }
        public IOAuthClientsEntityInternal OAuthClients { get; private set; }
        public IPlanAddonsEntityInternal PlanAddons { get; private set; }
        public IReportsEntityInternal Reports { get; private set; }
        public IUsagePlansEntityInternal UsagePlans { get; private set; }
        public IAzureSBTopicsEntityInternal AzureSBTopics { get; private set; }
        public IConfigsEntityInternal Configs { get; private set; }
        public IDevicesEntityInternal Devices { get; private set; }
        public IQueuesEntityInternal Queues { get; private set; }
    }
}