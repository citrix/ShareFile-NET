// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2014 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.IO;
using ShareFile.Api.Models;
using ShareFile.Api.Client;
using ShareFile.Api.Client.Requests;

namespace ShareFile.Api.Client.Entities
{

	public interface IConnectorGroupsEntity : IEntityBase
	{
		IQuery<ODataFeed<ConnectorGroup>> Get();
		IQuery<ConnectorGroup> Get(string id);
		IQuery<ConnectorGroupZone> GetZones(string parentid, string id);
		IQuery<ODataFeed<ConnectorGroup>> GetByZone(string id);
		IQuery<ConnectorGroup> Create(ConnectorGroup connectorGroup);
		IQuery<ConnectorGroupZone> CreateZones(string parentid, ConnectorGroupZone connectorGroupZone);
		IQuery<ConnectorGroupZone> Update(string parentid, string id, ConnectorGroupZone connectorGroupZone);
		IQuery Delete(string parentid, string id);
		IQuery DeleteZones(string parentid, string id);
		IQuery<ODataFeed<StorageCenter>> GetStorageCenters(string grandparentid, string parentid);
		IQuery<ODataFeed<StorageCenter>> CreateStorageCenters(string grandparentid, string parentid, StorageCenter storageCenter);
	}

	public class ConnectorGroupsEntity : EntityBase, IConnectorGroupsEntity
	{
		public ConnectorGroupsEntity(IShareFileClient client)
			: base (client, "ConnectorGroups")
			
		{

		}

		public IQuery<ODataFeed<ConnectorGroup>> Get()
		{
			var sfApiQuery = new ShareFile.Api.Client.Requests.Query<ODataFeed<ConnectorGroup>>(Client);
			sfApiQuery.From("ConnectorGroups");
			sfApiQuery.HttpMethod = "GET";
			return sfApiQuery;
		}

		public IQuery<ConnectorGroup> Get(string id)
		{
			var sfApiQuery = new ShareFile.Api.Client.Requests.Query<ConnectorGroup>(Client);
			sfApiQuery.From("ConnectorGroups");
			sfApiQuery.Ids(id);
			sfApiQuery.HttpMethod = "GET";
			return sfApiQuery;
		}

		public IQuery<ConnectorGroupZone> GetZones(string parentid, string id)
		{
			var sfApiQuery = new ShareFile.Api.Client.Requests.Query<ConnectorGroupZone>(Client);
			sfApiQuery.From("ConnectorGroups");
			sfApiQuery.Action("Zones");
			sfApiQuery.Ids(parentid);
			sfApiQuery.ActionIds(id);
			sfApiQuery.HttpMethod = "GET";
			return sfApiQuery;
		}

		public IQuery<ODataFeed<ConnectorGroup>> GetByZone(string id)
		{
			var sfApiQuery = new ShareFile.Api.Client.Requests.Query<ODataFeed<ConnectorGroup>>(Client);
			sfApiQuery.From("ConnectorGroups");
			sfApiQuery.Action("GetByZone");
			sfApiQuery.ActionIds(id);
			sfApiQuery.HttpMethod = "GET";
			return sfApiQuery;
		}

		public IQuery<ConnectorGroup> Create(ConnectorGroup connectorGroup)
		{
			var sfApiQuery = new ShareFile.Api.Client.Requests.Query<ConnectorGroup>(Client);
			sfApiQuery.From("ConnectorGroups");
			sfApiQuery.Body = connectorGroup;
			sfApiQuery.HttpMethod = "POST";
			return sfApiQuery;
		}

		public IQuery<ConnectorGroupZone> CreateZones(string parentid, ConnectorGroupZone connectorGroupZone)
		{
			var sfApiQuery = new ShareFile.Api.Client.Requests.Query<ConnectorGroupZone>(Client);
			sfApiQuery.From("ConnectorGroups");
			sfApiQuery.Action("Zones");
			sfApiQuery.Ids(parentid);
			sfApiQuery.Body = connectorGroupZone;
			sfApiQuery.HttpMethod = "POST";
			return sfApiQuery;
		}

		public IQuery<ConnectorGroupZone> Update(string parentid, string id, ConnectorGroupZone connectorGroupZone)
		{
			var sfApiQuery = new ShareFile.Api.Client.Requests.Query<ConnectorGroupZone>(Client);
			sfApiQuery.From("ConnectorGroups");
			sfApiQuery.Action("Zones");
			sfApiQuery.Ids(parentid);
			sfApiQuery.ActionIds(id);
			sfApiQuery.Body = connectorGroupZone;
			sfApiQuery.HttpMethod = "PATCH";
			return sfApiQuery;
		}

		public IQuery Delete(string parentid, string id)
		{
			var sfApiQuery = new ShareFile.Api.Client.Requests.Query(Client);
			sfApiQuery.From("ConnectorGroups");
			sfApiQuery.Action("Zones");
			sfApiQuery.Ids(parentid);
			sfApiQuery.ActionIds(id);
			sfApiQuery.HttpMethod = "DELETE";
			return sfApiQuery;
		}

		public IQuery DeleteZones(string parentid, string id)
		{
			var sfApiQuery = new ShareFile.Api.Client.Requests.Query(Client);
			sfApiQuery.From("ConnectorGroups");
			sfApiQuery.Action("Zones");
			sfApiQuery.Ids(parentid);
			sfApiQuery.ActionIds(id);
			sfApiQuery.HttpMethod = "DELETE";
			return sfApiQuery;
		}

		public IQuery<ODataFeed<StorageCenter>> GetStorageCenters(string grandparentid, string parentid)
		{
			var sfApiQuery = new ShareFile.Api.Client.Requests.Query<ODataFeed<StorageCenter>>(Client);
			sfApiQuery.From("ConnectorGroups");
			sfApiQuery.Action("Zones");
			sfApiQuery.Ids(grandparentid);
			sfApiQuery.ActionIds(parentid);
			sfApiQuery.SubAction("StorageCenters");
			sfApiQuery.HttpMethod = "GET";
			return sfApiQuery;
		}

		public IQuery<ODataFeed<StorageCenter>> CreateStorageCenters(string grandparentid, string parentid, StorageCenter storageCenter)
		{
			var sfApiQuery = new ShareFile.Api.Client.Requests.Query<ODataFeed<StorageCenter>>(Client);
			sfApiQuery.From("ConnectorGroups");
			sfApiQuery.Action("Zones");
			sfApiQuery.Ids(grandparentid);
			sfApiQuery.ActionIds(parentid);
			sfApiQuery.SubAction("StorageCenters");
			sfApiQuery.Body = storageCenter;
			sfApiQuery.HttpMethod = "POST";
			return sfApiQuery;
		}

	}
}
